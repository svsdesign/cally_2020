/*! Flickity v2.2.1 - core
	https://flickity.metafizzy.co

 	---------------------------------------------- */

	.flickity-enabled {
	  position: relative;
	}

	.flickity-enabled:focus { outline: none; }

	.flickity-viewport {
	  overflow: hidden;
	  position: relative;
	  height: 100%;
	}

	.flickity-slider {
	  position: absolute;
	  width: 100%;
	  height: 100%;
 	}

	/* draggable */

	.flickity-enabled.is-draggable {
	  -webkit-tap-highlight-color: transparent;
	  -webkit-user-select: none;
	     -moz-user-select: none;
	      -ms-user-select: none;
	          user-select: none;
	}

	.flickity-enabled.is-draggable .flickity-viewport {
	  cursor: move;
	  cursor: -webkit-grab;
	  width: 100%;
	  cursor: grab;
	}

	.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {
	  cursor: -webkit-grabbing;
	  cursor: grabbing;
	}

	/* ---- flickity-button ---- */

	.flickity-button {
	  position: absolute;
	 // background: hsla(0, 0%, 100%, 0.75);
	  border: none;
	 // color: #333;
	}

	.flickity-button:hover {
	 // background: white;
	  cursor: pointer;
	}

	.flickity-button:focus {
	  outline: none;
	 // box-shadow: 0 0 0 5px #19F;
	}

	.flickity-button:active {
	 // opacity: 0.6;
	}

	.flickity-button:disabled {
	  opacity: 0.3;
	  cursor: auto;
	  /* prevent disabled button from capturing pointer up event. #716 */
	  pointer-events: none;
	}

	.flickity-button-icon {
	  fill: currentColor;
	}

	/* ---- previous/next buttons ---- */

	.flickity-prev-next-button {
	//top: 100%; // align to bottom of gallery
	//@include cssvaluegutter(width,5); 
	//@include cssvaluegutter(height,5); 

	@include fluid-type(width, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*4, map-get($gutter, lg)*4); // fixed sizing
  	@include fluid-type(width, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*4, map-get($gutter, xxl)*4); // viewport sizing
	@include fluid-type(height, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*4, map-get($gutter, lg)*4); // fixed sizing
  	@include fluid-type(height, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*4, map-get($gutter, xxl)*4); // viewport sizing

	
	border-radius: 50%;
	/* vertically center */
	transform: translateY(-50%);
	background: transparent;
	z-index: 5;// ensure above the dots
	//@include cssvaluegutter(margin-top,2.5); 
	top:50%;// mid alligned.


	@media (min-width: map-get($breakpoints,xs)) {
	//height: 100%;
	}

	@media (min-width: map-get($breakpoints,lg)) {
	@include fluid-type(width, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*2, map-get($gutter, lg)*2); // fixed sizing
  	@include fluid-type(width, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*2, map-get($gutter, xxl)*2); // viewport sizing
	@include fluid-type(height, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*2, map-get($gutter, lg)*2); // fixed sizing
  	@include fluid-type(height, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*2, map-get($gutter, xxl)*2); // viewport sizing

	}

	  	svg{
	  	fill:$white;
	  	}

	}

	.flickity-prev-next-button.previous { 
	left: 0; // one column
	width: 12.5%;
	height: 100%;
	}
	.flickity-prev-next-button.next { 
		right: 0; // one column
		width: 12.5%;
	height: 100%;
	}
	/* right to left */
	.flickity-rtl .flickity-prev-next-button.previous {
	//  left: auto;
	//	right: 12.5%; // one column
	}
	.flickity-rtl .flickity-prev-next-button.next {
	//  right: auto;
	//	left: 12.5%; // one column
	}

	.flickity-prev-next-button .flickity-button-icon {
	position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    padding: 25%;
	}

	/* ---- page dots ---- */

	.flickity-page-dots {
	position: relative;
	width: 100%;
	display: none;// not using these at all
	clear: both;
 	@include fluid-type(height, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*4, map-get($gutter, lg)*4); // fixed sizing
  	@include fluid-type(height, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*4, map-get($gutter, xxl)*4); // viewport sizing
	margin: auto;
	list-style: none;
	text-align: center;
	display: none;

		@media (min-width: map-get($breakpoints,md)) {
		}

		@media (min-width: map-get($breakpoints,lg)) {
		}
	
	}//.flickity-page-dots

	.flickity-rtl .flickity-page-dots { 
	direction: rtl; 
	}

	.flickity-page-dots .dot {
	display: inline-block;
	background: $white;
	border-radius: 50%;
	// opacity: 0.25;
	cursor: pointer;
	box-sizing: border-box;
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;

		@media (min-width: map-get($breakpoints,md)) {
		//display: block;
	// change values
	/*
			@include cssvaluegutter(width,0.75); 
	@include cssvaluegutter(height,0.75); 
	@include cssvaluegutter(margin-left, 0.5); 
	@include cssvaluegutter(margin-right, 0.5);*/
		}

    	@media (min-width: map-get($breakpoints,lg)) {
    			// change values 
    			/*
		@include cssvaluegutter(width,0.5); 
 	 	@include cssvaluegutter(height,0.5); 
	 	@include cssvaluegutter(padding-top, 0.25); 
	 	@include cssvaluegutter(margin-top, 0.25);
	 	@include cssvaluegutter(margin-left, 0.5); 
		@include cssvaluegutter(margin-right, 0.5);
		*/
		}

	}

	.flickity-page-dots .dot.is-selected {
	//  opacity: 1;
//	  background: transparent;
//	  border: 1px solid hite;
	}



/* additional styles */

.slideshow-block{
//background: red;
width: 100%;// this dirty?
 //height: 90vh;
	// change values
	/*
@include cssvaluegutter(margin-bottom, 5);  // for the dots area
*/
@media (min-width: map-get($breakpoints,lg)) {
//@include cssvaluegutter(margin-bottom, 3); 
}

	//.outer-grid-item.inner{
	//height: inherit;
	//max-height: inherit;

	.slideshow-carousel{
	width: 100%;
	height: inherit;
	max-height: inherit;
	
		.flickity-viewport{
		width: 100%;
		height: inherit;
		max-height: inherit;	

			.slideshow-image{
			height: inherit;
			max-height: inherit;
		    @include fluid-type(margin-right, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*2, map-get($gutter, lg)*2); // fixed sizing
 			@include fluid-type(margin-right, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*2, map-get($gutter, xxl)*2); // viewport sizing

				img {
				opacity: 1;
 				display: block;
				height:100%;
				width: auto;
				}

			}//.slideshow-image

	 	}//	.flickity-viewport

	}//.slideshow-carousel

	.image-caption{
	width: 100%;
	@include fluid-type(padding-top, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($gutter, xs)*1, map-get($gutter, lg)*1); // fixed sizing
  	@include fluid-type(padding-top, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($gutter, lg)*1, map-get($gutter, xxl)*1); // viewport sizing

		@media (min-width: map-get($breakpoints,md)) {
		width: 50%;
		}

	}//.image-caption

} //.slideshow-block

// specic rules based on device orientation
body.horizontal{

	.slideshow-block{
	height: inherit;

		.slideshow-carousel{
		height: 80vh;
		max-height: 60vh;

			@media (min-width: map-get($breakpoints,lg)) {
				max-height: 75vh;
			}

		}//.slideshow-carousel

	}//.slideshow-block

}//body.horizontal


body.vertical{

	.slideshow-block{
	height: inherit;

		.slideshow-carousel{

		// height: 60vh; 
		height: 60vw;// experimental?
		//max-height: 60vh//
		}

	}//.slideshow-block

}//body.vertical