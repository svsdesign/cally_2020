{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","headHeight","jQuery","height","SetSubmenuHeight","headRoomStatus","SubmenuHeight","doc","outerHeight","headroomHeight","detectAttrChange","on","setTimeout","offset","top","animate","scrollTop","css","orientation","checkOrientation","winwidth","width","opacity","hasClass","imageopacity","find","each","$thisimage","this","imagesLoaded","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","remove","click","menuPositioner","$body","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","applymarginleft","marginLeft","menuClasses","thislinkdata","target","closest","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","removeCommentBubble","hoverDiv","$thisitem","hoverloop","clearInterval","hovermouseX","hovermouseY","hoverlimitX","hoverlimitY","mousemove","e","hoveroffset","min","pageX","left","pageY","hoverfollower","hoverxp","hoveryp","setInterval","checkhoverDiv","images","$block","$thisimageblock","introbanner","$thisbannerimg","slideshow","getScript","data","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","_typeof","obj","Symbol","iterator","constructor","prototype","_AwaitValue","value","wrapped","_AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","Promise","resolve","then","settle","done","err","type","reject","next","_invoke","request","return","undefined","init$1","submissionname","$startbutton","startSaving","Packery","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","preventDefault","url","method","serializeArray","modal","tinyMCE","push","name","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","verifyItemsRepeater","removeRow","hide","show","canvasChange","text","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","checkbreakpointName","replace","widescreenbreakpointName","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","change","event","ui","thisimage","imagetype","updateImageObject","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","$newitem","draggie","Draggabilly","imageEdit","jsonpositions","stringify","val","localStorage","setItem","$closest","clearTimeout","posttitle","has","thescale","innerWidth","html2canvas","scale","scrollY","pageYOffset","canvas","img","src","toDataURL","getCanvas","newData","$cleangrid","cleanGridContent","removeItem","Storage","_setItem","alert","isLocalStorageNameSupported","gridContent","innerHTML","LZString","decompress","empty","append","location","reload","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","zIndexClass","indexOf","$cleangridcontent","prop","compress","thiswidth","thisheight","thiswidthtoheightratio","thisimagewidthtoheightratio","init$2","mouseenter","thissection","$nextline","$previousline","prev","init","touch","barba","views","namespace","afterEnter","$thisscroll","hash","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","path","home_directory","siteLoad","init$3","initheadroom","tolerance","initial","pinned","unpinned","frozen","onPin","onUnpin","windowScrolltop","$intro","introheight","reached","asyncIterator","throw","inpapp"],"mappings":"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","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var $=$||jQuery;var initSubmenuHeight=function initSubmenuHeight(){var doc=document.documentElement;doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight,\"px\"));};var initHeadroomHeight=function initHeadroomHeight(){var headHeight=$(\"#header-nav-area\").height();var doc=document.documentElement;doc.style.setProperty('--headroom-height',headHeight+'px');};var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();initSubmenuHeight();initHeadroomHeight();}function SetSubmenuHeight(headRoomStatus){console.log(\"SetSubmenuHeight\");console.log(\" headRoomStatust\"+headRoomStatus+\"\");var SubmenuHeight=function SubmenuHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight-headHeight,\"px\"));};var headroomHeight=function headroomHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--headroom-height',headHeight+'px');};window.addEventListener('resize',SubmenuHeight);window.addEventListener('resize',headroomHeight);SubmenuHeight();headroomHeight();}function detectAttrChange(){$(\".wpuf-submit\").on(\"remove\",function(){$(\"body\").addClass('form-submitted');function startScroll(){console.log(\"scroll now\");var wHeight=$(window).height();var eOffset=$('.wpuf-success').offset().top;var eHeight=$('.wpuf-success').height();$('html, body').animate({scrollTop:$(\".exports-wrap\").offset().top},1000);}setTimeout(startScroll,1);function removeSuccess(){$(\".wpuf-success\").css(\"display\",\"none\");}setTimeout(removeSuccess,6000);});}function orientation(){var $=$||jQuery;console.log(\"hello orientation function\");function checkOrientation(){var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}checkOrientation();window.addEventListener('resize',checkOrientation);}function opacity(){console.log(\"opacity() function\");var $=$||jQuery;console.log(\"removed imagesloaded\");function waitloading(){$(\"body\").addClass('images-loaded');if($(\"body\").hasClass(\"page-template-page-grid\")){console.log(\"grid loader removing\");$(\"body\").addClass('page-content-loaded');}}setTimeout(waitloading,200);}function imageopacity(){console.log(\"images loaded applied here\");var $=$||jQuery;var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){console.log(\"menupositioner\");var $body=$('body'),$positioner=$(\"#positioner\"),$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});if($body.hasClass('home')){console.log(\"is body\");activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else if($body.hasClass('parent-pageid-101')||$body.hasClass('parent-pageid-104')){console.log(\"is parent of about\");var $activemenuitem=$menu.children().filter(\".about-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else if($body.hasClass('single-news')){console.log(\"is single news - apply active to the parent\");var $activemenuitem=$menu.children().filter(\".news-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else{activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}}function menuClasses(thislinkdata,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});console.log(\"menuClasses = \"+thislinkdata+\"\");$(\".menu-item > a[href$=\\\"\".concat(thislinkdata,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function fade(){var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}function removeCommentBubble(){if($('#wpd-bubble-wrapper').length){$('#wpd-bubble-wrapper').remove();}}function hoverDiv($thisitem){$thisitem=$thisitem;var hoverloop;var checkhoverDiv=function checkhoverDiv($thisitem){var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});},100);};window.addEventListener('resize',function(){if($('body').hasClass('dev-layout-grid-on')){console.log(\"resizing for hover div - but grid now active\");return;}else{console.log(\"resizing for hover div\");$thisitem=$('.dev-layout-grid-toggle');checkhoverDiv=null;clearInterval(hoverloop);var checkhoverDiv=function checkhoverDiv($thisitem){console.log(\"check hover div after resize\");var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});console.log(\"interval in resize\");},100);};checkhoverDiv($thisitem);}});$(\".dev-layout-grid-toggle\").click(function(){clearInterval(hoverloop);});checkhoverDiv($thisitem);}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function introbanner($block){console.log(\"images loaded applied here\");var $thisbannerblock=$block.find(\"img\");$thisbannerblock.each(function(){console.log(\"each 'intro banner block image '\");var $thisbannerimg=$(this);$thisbannerimg.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisbannerimg.attr('src'),newSrc=$thisbannerimg.attr('data-src');$thisbannerimg.attr('src',newSrc);$thisbannerimg.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:true,percentPosition:false,freeScroll:true,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nconsole.log('blocks.js');function blocks(){if($('.intro-banner-block').length>0){$('.intro-banner-block').each(function(){console.log(\"each .intro-banner-block\");var $thisblock=$(this);introbanner($thisblock);});}if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nfunction _AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof _AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen.return !== \"function\") {\n    this.return = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  _AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\n_AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\n_AsyncGenerator.prototype.throw = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\n_AsyncGenerator.prototype.return = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nfunction init$1(){var mediaImage,$imagethumb=$('.acf-image-edit'),newitemid,submissionname,$startbutton=$('.dev-layout-grid-toggle');var startSaving=true;Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function onSubmission(){detectAttrChange();}function canvasChange(){console.log(\"canvasChange()\");if($(\"body\").hasClass(\"submission-previewed\")){$(\"body\").addClass(\"update-available\");$(\"a#load-image\").text(\"Update Preview Image\");}}function updateLocalStorage(){if(startSaving==true){console.log(\"starSaving Function - this should only happens\");startSaving=false;setInterval(function(){var $cleangrid=$(\"#tester-grid-id\");console.log(\"clean grid function - i.e storing data\");cleanGridContent($cleangrid);},30000);}}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");setTimeout(function(){if($('#canvas-wrap').has('canvas').length){console.log(\"delete exisint canvas\");$('#canvas-wrap').find('canvas').remove();}if($('#export-image-wrap img').length){console.log(\"delete existing image\");$('#export-image-wrap').find('img').remove();}var thescale=1/window.innerWidth*1000;html2canvas(document.querySelector(\".grid-layer\"),{scale:thescale,scrollY:window.pageYOffset*-1}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);$('body').addClass(\"submission-previewed\");$('.export-options').removeClass(\"grid-md-9\").addClass(\"grid-md-6\");$('body').removeClass(\"capturing-image\");$('body').removeClass(\"update-available\");});},1);}function initiatepackery($thisgrid){var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){console.log(\"checkPackery()\");var breakpointName=getComputedStyle(document.body,':after').content,checkbreakpointName=breakpointName.replace(/\"([^\"]+(?=\"))\"/g,'$1'),widescreenbreakpointName=\"widescreen\",defaultbreakpointName=\"default\";console.log(\"breakpointName: \"+breakpointName+\"\");console.log(\"checkbreakpointName: \"+checkbreakpointName+\"\");console.log(\"widescreenbreakpointName: \"+widescreenbreakpointName+\"\");console.log(\"isPackeryInit: \"+isPackeryInit+\"\");if(checkbreakpointName===widescreenbreakpointName&&!isPackeryInit){console.log(\"init packery if widescreen & not already init\");$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$thisitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);},select:function select(event,ui){$newlastitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');}else{var storedcoordinates=localStorage.getItem('coordinates');if(storedcoordinates==null){var storedcoordinates=initPositions;}$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned - logged in'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}else{$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"dragItemPositioned - not logged in\");$grid.packery('layout').trigger('layoutComplete');var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}if($('body').hasClass(\"is-touch\")){console.log(\" TO DO ensure to have touch screen message enabled\");}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}setTimeout(function(){$grid.packery('layout').trigger('layoutComplete');},100);}else if(breakpointName===defaultbreakpointName&&isPackeryInit){console.log(\"disable packery if default and already intialized\");$grid.packery('destroy');isPackeryInit=false;console.log(\"Hello breakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{console.log(\"else - but doesnt do anything\");}}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}$('input[name=\"submission_name\"]').on('change',function(){submissionname=$('input[name=\"submission_name\"]').val();var posttitle=submissionname;$('input[name=\"post_title\"]').val(\"\"+posttitle+\"\");console.log(\"submissionname =\"+submissionname+\"\");console.log(\"posttitle =\"+posttitle+\"\");});$(\"#load-image\").on('click',function(){console.log(\"load-image click\");captureCanvas();});$(\"#download-image\").on('click',function(){var imgageData=getCanvas.toDataURL(\"image/png\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"\"+submissionname+\"'s Freeling Street.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');$(\"#size-wrap\").removeClass('grid-container');}else{$('body').addClass('dev-layout-grid-on');$(\"#size-wrap\").addClass('grid-container');$('html, body').animate({scrollTop:$('.grid-layer').offset().top-0},'slow');}updateLocalStorage();});function initgriditems(){function isLocalStorageNameSupported(){if((typeof localStorage===\"undefined\"?\"undefined\":_typeof(localStorage))==='object'){try{localStorage.setItem('localStorage',1);localStorage.removeItem('localStorage');}catch(e){Storage.prototype._setItem=Storage.prototype.setItem;Storage.prototype.setItem=function(){};alert('Your web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.');}}}isLocalStorageNameSupported();$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;}else{var gridContent=LZString.decompress(localStorage.getItem('gridContent'));$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);$(\"#clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');location.reload();});}}});}initgriditems();hoverDiv($startbutton);onSubmission();}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");$('body').removeClass(\"edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$('body').addClass(\"edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){console.log(\"click; rotate clicking\");var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('.grid-item-options-toggle-rotate .rotate').css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('input.input-rotate').val(thisnewrotatevalue);});$inputfields.on('input',function(){console.log(\"$inputfields changed\");var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}function updateImageObject($thisitem,imagetype){var zIndexClass=$thisitem.attr('class').split(' ');for(var i=0;i<zIndexClass.length;i++){if(zIndexClass[i].indexOf('item-z-index')!=-1){$thisitem.removeClass(zIndexClass[i]);}}if(imagetype=='tree'){$thisitem.attr(\"data-item-z-index\",\"2\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"2\");$thisitem.addClass(\"item-z-index-2\");}else if(imagetype=='normal'){$thisitem.attr(\"data-item-z-index\",\"1\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"1\");$thisitem.addClass(\"item-z-index-1\");}}function cleanGridContent($cleangrid){console.log(\"cleanGridContent($cleangrid)\");var $cleangridcontent=$cleangrid.clone();$cleangridcontent.find('.ui-selectmenu-button').remove();$cleangridcontent.find('.ui-selectmenu-menu.ui-front').remove();var gridContent=$cleangridcontent.prop('outerHTML');localStorage.setItem(\"gridContent\",LZString.compress(gridContent));}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}\n\nfunction init$2(){if($(\"body.page-id-101.page-parent .project-overview\").length>0){console.log(\"about page\");$('ul.sections li a').mouseenter(function(){var $this=$(this).parent(\"li\"),thissection=$this.attr(\"data-section-title\"),$nextline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').next(\".line\"),$previousline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').prev(\".line\");if($this.hasClass('section-is-active')){}else{$('ul.sections li').removeClass('section-is-active');$this.addClass('section-is-active');$previousline.addClass('section-is-active');$nextline.addClass('section-is-active');$('ul.sections li[data-section-title=\"'+thissection+'\"]').addClass('section-is-active');return;}return;});}}\n\nfunction init(){var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);domReady(init$2);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$2);domReady(init$1);domReady(blocks);if(window.location.hash){var $thisscroll=$(window.location.hash);setTimeout(function(){$('html, body').animate({scrollTop:$thisscroll.offset().top},1000);},1);}}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");imageopacity();opacity();domReady(blocks);}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);console.log(\"afterleave\");if(data.next.url.path){console.log(\"IF (data.next.url.path - apply menuclass changes\");console.log(\"data.next.url.path\"+data.next.url.path+\"\");var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';var thislinkdata=data.next.url.path;console.log(\"thislinkdata\"+thislinkdata+\"\");console.log(\"home_directory \"+home_directory+\"\");if(thislinkdata==\"/\"){console.log(\"staging\"+home_directory+\"\");thislinkdata=home_directory+\"/\";console.log(\"staging data\"+thislinkdata+\"\");}else if(thislinkdata==\"/cally-2020/\"){thislinkdata=thislinkdata;}else{thislinkdata=thislinkdata;console.log(\"else - so what kinda links we dealing wth?\");}menuClasses(thislinkdata,currentMenu);menuClasses(thislinkdata,currentPage);menuClasses(thislinkdata,currentMenuAncestor);menuClasses(thislinkdata,currentMenuParent);menuClasses(thislinkdata,currentPageAncestor);}else{}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}removeCommentBubble();menuPositioner();orientation();});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$3(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"},onPin:function onPin(){console.log(\"headroom onPin function\");var headRoomStatus=\"onPin\";SetSubmenuHeight(headRoomStatus);},onUnpin:function onUnpin(){var headRoomStatus=\"onUnpin\";console.log(\"headroom onUnPin function\");SetSubmenuHeight(headRoomStatus);}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$3();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}