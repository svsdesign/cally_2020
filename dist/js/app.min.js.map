{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","headHeight","jQuery","height","SetSubmenuHeight","headRoomStatus","SubmenuHeight","doc","outerHeight","headroomHeight","detectAttrChange","on","setTimeout","offset","top","animate","scrollTop","css","orientation","winwidth","width","opacity","hasClass","imageopacity","find","each","$thisimage","this","imagesLoaded","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","remove","click","menuPositioner","$body","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","applymarginleft","marginLeft","menuClasses","data","target","next","url","path","closest","topAnimation","addattr","$thisitem","off","removeAttr","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","removeCommentBubble","hoverDiv","hoverloop","clearInterval","hovermouseX","hovermouseY","hoverlimitX","hoverlimitY","mousemove","e","hoveroffset","min","pageX","left","pageY","hoverfollower","hoverxp","hoveryp","setInterval","checkhoverDiv","images","$block","$thisimageblock","introbanner","$thisbannerimg","slideshow","getScript","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","_typeof","obj","Symbol","iterator","constructor","prototype","_AwaitValue","value","wrapped","_AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","Promise","resolve","then","settle","done","err","type","reject","_invoke","request","return","undefined","init$1","submissionname","$startbutton","startSaving","Packery","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","preventDefault","method","serializeArray","modal","tinyMCE","push","name","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","verifyItemsRepeater","removeRow","hide","show","canvasChange","text","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","checkbreakpointName","replace","widescreenbreakpointName","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","change","event","ui","thisimage","imagetype","updateImageObject","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","$newitem","draggie","Draggabilly","imageEdit","jsonpositions","stringify","val","localStorage","setItem","$closest","clearTimeout","posttitle","has","thescale","innerWidth","html2canvas","scale","scrollY","pageYOffset","canvas","img","src","toDataURL","getCanvas","newData","$cleangrid","cleanGridContent","removeItem","Storage","_setItem","alert","isLocalStorageNameSupported","gridContent","innerHTML","LZString","decompress","empty","append","location","reload","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","zIndexClass","indexOf","$cleangridcontent","prop","compress","thiswidth","thisheight","thiswidthtoheightratio","thisimagewidthtoheightratio","init$2","mouseenter","thissection","$nextline","$previousline","prev","init","touch","barba","views","namespace","afterEnter","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","siteLoad","init$3","initheadroom","tolerance","initial","pinned","unpinned","frozen","onPin","onUnpin","windowScrolltop","$intro","introheight","reached","asyncIterator","throw","inpapp"],"mappings":"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","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var $=$||jQuery;var initSubmenuHeight=function initSubmenuHeight(){var doc=document.documentElement;doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight,\"px\"));};var initHeadroomHeight=function initHeadroomHeight(){var headHeight=$(\"#header-nav-area\").height();var doc=document.documentElement;doc.style.setProperty('--headroom-height',headHeight+'px');};var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();initSubmenuHeight();initHeadroomHeight();}function SetSubmenuHeight(headRoomStatus){console.log(\"SetSubmenuHeight\");console.log(\" headRoomStatust\"+headRoomStatus+\"\");var SubmenuHeight=function SubmenuHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight-headHeight,\"px\"));};var headroomHeight=function headroomHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--headroom-height',headHeight+'px');};window.addEventListener('resize',SubmenuHeight);window.addEventListener('resize',headroomHeight);SubmenuHeight();headroomHeight();}function detectAttrChange(){$(\".wpuf-submit\").on(\"remove\",function(){$(\"body\").addClass('form-submitted');function startScroll(){console.log(\"scroll now\");var wHeight=$(window).height();var eOffset=$('.wpuf-success').offset().top;var eHeight=$('.wpuf-success').height();$('html, body').animate({scrollTop:$(\".exports-wrap\").offset().top},1000);}setTimeout(startScroll,1);function removeSuccess(){$(\".wpuf-success\").css(\"display\",\"none\");}setTimeout(removeSuccess,6000);});}function orientation(){var $=$||jQuery;console.log(\"hello orientation function\");var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){console.log(\"opacity() function\");var $=$||jQuery;console.log(\"removed imagesloaded\");function waitloading(){$(\"body\").addClass('images-loaded');if($(\"body\").hasClass(\"page-template-page-grid\")){console.log(\"grid loader removing\");$(\"body\").addClass('page-content-loaded');}}setTimeout(waitloading,200);}function imageopacity(){console.log(\"images loaded applied here\");var $=$||jQuery;var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){console.log(\"menupositioner\");var $body=$('body'),$positioner=$(\"#positioner\"),$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});if($body.hasClass('home')){console.log(\"is body\");activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else if($body.hasClass('parent-pageid-101')||$body.hasClass('parent-pageid-104')){console.log(\"is parent of about\");var $activemenuitem=$menu.children().filter(\".about-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else if($body.hasClass('single-news')){console.log(\"is single news - apply active to the parent\");var $activemenuitem=$menu.children().filter(\".news-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else{activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}}function menuClasses(data,target){console.log(\"menuClasses\"+data+ +target+\"\");$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function topAnimation(){setTimeout(function(){$('body').removeClass('animation-fix');if($('body').data('move-to')){var addattr=$('body').data('move-to');$('html, body').animate({scrollTop:$(\"#\"+addattr+\"\").offset().top+1},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});$('body').removeAttr('data-move-to');});}else{$('html, body').animate({scrollTop:$(\"#main\").offset().top+0},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});});}},200);}function fade(){var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}function removeCommentBubble(){if($('#wpd-bubble-wrapper').length){$('#wpd-bubble-wrapper').remove();}}function hoverDiv($thisitem){$thisitem=$thisitem;var hoverloop;var checkhoverDiv=function checkhoverDiv($thisitem){var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});},100);};window.addEventListener('resize',function(){if($('body').hasClass('dev-layout-grid-on')){console.log(\"resizing for hover div - but grid now active\");return;}else{console.log(\"resizing for hover div\");$thisitem=$('.dev-layout-grid-toggle');checkhoverDiv=null;clearInterval(hoverloop);var checkhoverDiv=function checkhoverDiv($thisitem){console.log(\"check hover div after resize\");var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});console.log(\"interval in resize\");},100);};checkhoverDiv($thisitem);}});$(\".dev-layout-grid-toggle\").click(function(){clearInterval(hoverloop);});checkhoverDiv($thisitem);}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function introbanner($block){console.log(\"images loaded applied here\");var $thisbannerblock=$block.find(\"img\");$thisbannerblock.each(function(){console.log(\"each 'intro banner block image '\");var $thisbannerimg=$(this);$thisbannerimg.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisbannerimg.attr('src'),newSrc=$thisbannerimg.attr('data-src');$thisbannerimg.attr('src',newSrc);$thisbannerimg.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:true,percentPosition:false,freeScroll:true,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nconsole.log('blocks.js');function blocks(){if($('.intro-banner-block').length>0){$('.intro-banner-block').each(function(){console.log(\"each .intro-banner-block\");var $thisblock=$(this);introbanner($thisblock);});}if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nfunction _AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof _AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen.return !== \"function\") {\n    this.return = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  _AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\n_AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\n_AsyncGenerator.prototype.throw = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\n_AsyncGenerator.prototype.return = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nfunction init$1(){var mediaImage,$imagethumb=$('.acf-image-edit'),newitemid,submissionname,$startbutton=$('.dev-layout-grid-toggle');var startSaving=true;Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function onSubmission(){detectAttrChange();}function canvasChange(){console.log(\"canvasChange()\");if($(\"body\").hasClass(\"submission-previewed\")){$(\"body\").addClass(\"update-available\");$(\"a#load-image\").text(\"Update Preview Image\");}}function updateLocalStorage(){if(startSaving==true){console.log(\"starSaving Function - this should only happens\");startSaving=false;setInterval(function(){var $cleangrid=$(\"#tester-grid-id\");console.log(\"clean grid function - i.e storing data\");cleanGridContent($cleangrid);},30000);}}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");setTimeout(function(){if($('#canvas-wrap').has('canvas').length){console.log(\"delete exisint canvas\");$('#canvas-wrap').find('canvas').remove();}if($('#export-image-wrap img').length){console.log(\"delete existing image\");$('#export-image-wrap').find('img').remove();}var thescale=1/window.innerWidth*1000;html2canvas(document.querySelector(\".grid-layer\"),{scale:thescale,scrollY:window.pageYOffset*-1}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);$('body').addClass(\"submission-previewed\");$('.export-options').removeClass(\"grid-md-9\").addClass(\"grid-md-6\");$('body').removeClass(\"capturing-image\");$('body').removeClass(\"update-available\");});},1);}function initiatepackery($thisgrid){var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){console.log(\"checkPackery()\");var breakpointName=getComputedStyle(document.body,':after').content,checkbreakpointName=breakpointName.replace(/\"([^\"]+(?=\"))\"/g,'$1'),widescreenbreakpointName=\"widescreen\",defaultbreakpointName=\"default\";console.log(\"breakpointName: \"+breakpointName+\"\");console.log(\"checkbreakpointName: \"+checkbreakpointName+\"\");console.log(\"widescreenbreakpointName: \"+widescreenbreakpointName+\"\");console.log(\"isPackeryInit: \"+isPackeryInit+\"\");if(checkbreakpointName===widescreenbreakpointName&&!isPackeryInit){console.log(\"init packery if widescreen & not already init\");$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$thisitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);},select:function select(event,ui){$newlastitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');}else{var storedcoordinates=localStorage.getItem('coordinates');if(storedcoordinates==null){var storedcoordinates=initPositions;}$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned - logged in'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}else{$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"dragItemPositioned - not logged in\");$grid.packery('layout').trigger('layoutComplete');var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}if($('body').hasClass(\"is-touch\")){console.log(\" TO DO ensure to have touch screen message enabled\");}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}setTimeout(function(){$grid.packery('layout').trigger('layoutComplete');},100);}else if(breakpointName===defaultbreakpointName&&isPackeryInit){console.log(\"disable packery if default and already intialized\");$grid.packery('destroy');isPackeryInit=false;console.log(\"Hello breakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{console.log(\"else - but doesnt do anything\");}}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}$('input[name=\"submission_name\"]').on('change',function(){submissionname=$('input[name=\"submission_name\"]').val();var posttitle=submissionname;$('input[name=\"post_title\"]').val(\"\"+posttitle+\"\");console.log(\"submissionname =\"+submissionname+\"\");console.log(\"posttitle =\"+posttitle+\"\");});$(\"#load-image\").on('click',function(){console.log(\"load-image click\");captureCanvas();});$(\"#download-image\").on('click',function(){var imgageData=getCanvas.toDataURL(\"image/png\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"\"+submissionname+\"'s Freeling Street.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');$(\"#size-wrap\").removeClass('grid-container');}else{$('body').addClass('dev-layout-grid-on');$(\"#size-wrap\").addClass('grid-container');$('html, body').animate({scrollTop:$('.grid-layer').offset().top-0},'slow');}updateLocalStorage();});function initgriditems(){function isLocalStorageNameSupported(){if((typeof localStorage===\"undefined\"?\"undefined\":_typeof(localStorage))==='object'){try{localStorage.setItem('localStorage',1);localStorage.removeItem('localStorage');}catch(e){Storage.prototype._setItem=Storage.prototype.setItem;Storage.prototype.setItem=function(){};alert('Your web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.');}}}isLocalStorageNameSupported();$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;}else{var gridContent=LZString.decompress(localStorage.getItem('gridContent'));$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);$(\"#clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');location.reload();});}}});}initgriditems();hoverDiv($startbutton);onSubmission();}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");$('body').removeClass(\"edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$('body').addClass(\"edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){console.log(\"click; rotate clicking\");var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('.grid-item-options-toggle-rotate .rotate').css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('input.input-rotate').val(thisnewrotatevalue);});$inputfields.on('input',function(){console.log(\"$inputfields changed\");var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}function updateImageObject($thisitem,imagetype){var zIndexClass=$thisitem.attr('class').split(' ');for(var i=0;i<zIndexClass.length;i++){if(zIndexClass[i].indexOf('item-z-index')!=-1){$thisitem.removeClass(zIndexClass[i]);}}if(imagetype=='tree'){$thisitem.attr(\"data-item-z-index\",\"2\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"2\");$thisitem.addClass(\"item-z-index-2\");}else if(imagetype=='normal'){$thisitem.attr(\"data-item-z-index\",\"1\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"1\");$thisitem.addClass(\"item-z-index-1\");}}function cleanGridContent($cleangrid){console.log(\"cleanGridContent($cleangrid)\");var $cleangridcontent=$cleangrid.clone();$cleangridcontent.find('.ui-selectmenu-button').remove();$cleangridcontent.find('.ui-selectmenu-menu.ui-front').remove();var gridContent=$cleangridcontent.prop('outerHTML');localStorage.setItem(\"gridContent\",LZString.compress(gridContent));}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}\n\nfunction init$2(){if($(\"body.page-id-101.page-parent .project-overview\").length>0){console.log(\"about page\");$('ul.sections li a').mouseenter(function(){var $this=$(this).parent(\"li\"),thissection=$this.attr(\"data-section-title\"),$nextline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').next(\".line\"),$previousline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').prev(\".line\");if($this.hasClass('section-is-active')){}else{$('ul.sections li').removeClass('section-is-active');$this.addClass('section-is-active');$previousline.addClass('section-is-active');$nextline.addClass('section-is-active');$('ul.sections li[data-section-title=\"'+thissection+'\"]').addClass('section-is-active');return;}return;});}}\n\nfunction init(){var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);domReady(init$2);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$2);domReady(init$1);domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");imageopacity();opacity();domReady(blocks);}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);console.log(\"afterleave\");if(data.next.url.path){console.log(\"IF (data.next.url.path - apply menuclass changes\");var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}else{console.log(\"no (data.next.url.path?\");}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}removeCommentBubble();menuPositioner();orientation();});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();topAnimation();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$3(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"},onPin:function onPin(){console.log(\"headroom onPin function\");var headRoomStatus=\"onPin\";SetSubmenuHeight(headRoomStatus);},onUnpin:function onUnpin(){var headRoomStatus=\"onUnpin\";console.log(\"headroom onUnPin function\");SetSubmenuHeight(headRoomStatus);}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$3();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}