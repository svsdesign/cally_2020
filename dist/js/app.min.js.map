{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","headHeight","jQuery","height","SetSubmenuHeight","headRoomStatus","SubmenuHeight","doc","outerHeight","headroomHeight","detectAttrChange","on","setTimeout","wHeight","eOffset","offset","top","eHeight","animate","scrollTop","css","orientation","winwidth","width","opacity","hasClass","imageopacity","find","each","$thisimage","this","imagesLoaded","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","remove","click","menuPositioner","$body","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","applymarginleft","marginLeft","menuClasses","data","target","next","url","path","closest","topAnimation","addattr","$thisitem","off","removeAttr","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","removeCommentBubble","hoverDiv","hoverloop","clearInterval","hovermouseX","hovermouseY","hoverlimitX","hoverlimitY","mousemove","e","hoveroffset","min","pageX","left","pageY","hoverfollower","hoverxp","hoveryp","setInterval","checkhoverDiv","succesScroll","images","$block","$thisimageblock","introbanner","$thisbannerimg","slideshow","getScript","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","_typeof","obj","Symbol","iterator","constructor","prototype","_AwaitValue","value","wrapped","_AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","Promise","resolve","then","settle","done","err","type","reject","_invoke","request","return","undefined","init$1","submissionname","$startbutton","Packery","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","preventDefault","method","serializeArray","modal","tinyMCE","push","name","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","verifyItemsRepeater","removeRow","hide","show","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","checkbreakpointName","replace","widescreenbreakpointName","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","change","event","ui","thisimage","imagetype","updateImageObject","canvasChange","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","$newitem","draggie","Draggabilly","imageEdit","jsonpositions","stringify","val","localStorage","setItem","$closest","clearTimeout","posttitle","has","thescale","innerWidth","html2canvas","scale","scrollY","pageYOffset","canvas","img","src","toDataURL","getCanvas","newData","removeItem","Storage","_setItem","alert","isLocalStorageNameSupported","gridContent","innerHTML","LZString","decompress","empty","append","location","reload","text","startSaving","$cleangrid","cleanGridContent","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","zIndexClass","indexOf","$cleangridcontent","prop","compress","thiswidth","thisheight","thiswidthtoheightratio","thisimagewidthtoheightratio","init$2","mouseenter","thissection","$nextline","$previousline","prev","init","touch","barba","views","namespace","afterEnter","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","siteLoad","init$3","initheadroom","tolerance","initial","pinned","unpinned","frozen","onPin","onUnpin","windowScrolltop","$intro","introheight","reached","asyncIterator","throw","inpapp"],"mappings":";;;;;;;;;AAAA,SAASA,SAASC,GAA6B,YAAtBC,SAASC,WAAqCD,SAASE,iBAAiB,mBAAmBH,GAA1DA,IAA+D,SAASI,cAA4C,GAA9BC,QAAQC,IAAI,kBAAqB,iBAAiBC,OAAO,CAACC,EAAE,QAAQC,YAAY,gBAAgBD,EAAE,QAAQE,SAAS,YAAY,IAAI,IAAI,IAAIC,KAAMV,SAASW,YAAY,CAAC,IAAIC,EAAWZ,SAASW,YAAYD,GAAI,GAAIE,EAAWC,MAAe,IAAI,IAAIC,EAAGF,EAAWC,MAAME,OAAO,EAAM,GAAJD,EAAMA,IAAUF,EAAWC,MAAMC,GAAIE,cAAyBJ,EAAWC,MAAMC,GAAIE,aAAaC,MAAM,WAAWL,EAAWM,WAAWJ,IAAQ,MAAMK,UAAWZ,EAAE,QAAQC,YAAY,YAAYD,EAAE,QAAQE,SAAS,gBAAkB,SAASW,eAAiZ,SAAVC,IAAuCrB,SAASsB,gBAAoBC,MAAMC,YAAY,gBAAgB,GAAGC,OAAOnB,OAAOoB,YAAY,OAA3f,IAA4OC,EAAxOpB,EAAEA,GAAGqB,OAA2ftB,OAAOJ,iBAAiB,SAASmB,GAAWA,IAArerB,SAASsB,gBAAoBC,MAAMC,YAAY,mBAAmB,GAAGC,OAAOnB,OAAOoB,YAAY,OAAkEC,EAAWpB,EAAE,oBAAoBsB,SAAiB7B,SAASsB,gBAAoBC,MAAMC,YAAY,oBAAoBG,EAAW,MAA0P,SAASG,iBAAiBC,GAAgB3B,QAAQC,IAAI,oBAAoBD,QAAQC,IAAI,mBAAmB0B,GAAqC,SAAdC,IAAuC,IAAwJL,EAApJM,EAAIjC,SAASsB,gBAAmC,SAAhBS,EAA6BJ,EAAWpB,EAAE,oBAAoB2B,cAAuC,WAAhBH,IAA+BJ,EAAW,GAAGM,EAAIV,MAAMC,YAAY,mBAAmB,GAAGC,OAAOnB,OAAOoB,YAAYC,EAAW,OAA4B,SAAfQ,IAAyC,IAAwJR,EAApJM,EAAIjC,SAASsB,gBAAmC,SAAhBS,EAA6BJ,EAAWpB,EAAE,oBAAoB2B,cAAuC,WAAhBH,IAA+BJ,EAAW,GAAGM,EAAIV,MAAMC,YAAY,oBAAoBG,EAAW,MAAQrB,OAAOJ,iBAAiB,SAAS8B,GAAe1B,OAAOJ,iBAAiB,SAASiC,GAAgBH,IAAgBG,IAAkB,SAASC,mBAAmBhC,QAAQC,IAAI,sBAAsBE,EAAE,gBAAgB8B,GAAG,SAAS,WAAW9B,EAAE,QAAQE,SAAS,kBAAwP6B,WAAtO,WAAuBlC,QAAQC,IAAI,cAAc,IAAIkC,EAAQhC,EAAED,QAAQuB,SAAaW,EAAQjC,EAAE,iBAAiBkC,SAASC,IAAQC,EAAQpC,EAAE,iBAAiBsB,SAAStB,EAAE,cAAcqC,QAAQ,CAACC,UAAUL,EAAQD,EAAQI,GAAS,MAA6B,KAAwEL,WAAnE,WAAyB/B,EAAE,iBAAiBuC,IAAI,UAAU,SAAkC,OAAU,SAASC,cAAc,IAAIxC,EAAEA,GAAGqB,OAAOxB,QAAQC,IAAI,8BAA8B,IAAI2C,EAASzC,EAAED,QAAQ2C,QAAsB1C,EAAED,QAAQuB,SAAYmB,GAAoBzC,EAAE,QAAQE,SAAS,cAAcF,EAAE,QAAQC,YAAY,cAAkBD,EAAE,QAAQC,YAAY,cAAcD,EAAE,QAAQE,SAAS,aAAc,SAASyC,UAAU9C,QAAQC,IAAI,sBAAsB,IAAIE,EAAEA,GAAGqB,OAAOxB,QAAQC,IAAI,wBAAqNiC,WAA7L,WAAuB/B,EAAE,QAAQE,SAAS,iBAAoBF,EAAE,QAAQ4C,SAAS,6BAA4B/C,QAAQC,IAAI,wBAAwBE,EAAE,QAAQE,SAAS,yBAAgD,KAAM,SAAS2C,eAAehD,QAAQC,IAAI,8BAA8B,IAAIE,EAAEA,GAAGqB,OAA2BrB,EAAE,QAAQ8C,KAAK,wBAAwCC,KAAK,WAAWlD,QAAQC,IAAI,qBAAqB,IAAIkD,EAAWhD,EAAEiD,MAAMD,EAAWE,aAAa,GAAG,WAAWrD,QAAQC,IAAI,sBAAiCkD,EAAWG,KAAK,OAA3B,IAAkCC,EAAOJ,EAAWG,KAAK,YAAYH,EAAWG,KAAK,MAAMC,GAAQJ,EAAW9C,SAAS,cAAiB,SAASmD,UAAU,IAAsEC,EAA+CC,EAA5F,EAAtBvD,EAAE,aAAaQ,SAA0BR,EAAE,eAAesB,SAASgC,EAAmBtD,EAAE,iBAAiBsB,SAASiC,EAAWvD,EAAE,mBAAmBwD,aAAa,KAAKC,aAAa,MAAMC,cAAcJ,EAAmBE,aAAaD,EAAWhB,IAAI,SAASe,GAAoBtD,EAAE,8BAA8B2D,SAAS3D,EAAE,oBAAoB4D,MAAM,WAAc5D,EAAE,QAAQ4C,SAAS,eAAgB5C,EAAE,QAAQC,YAAY,eAAqBD,EAAE,QAAQE,SAAS,kBAAqB,SAAS2D,iBAAiBhE,QAAQC,IAAI,kBAAkB,IAAIgE,EAAM9D,EAAE,QAAQ+D,EAAY/D,EAAE,eAAegE,EAAMhE,EAAE,2BAA2BiE,EAAWD,EAAME,WAAWC,EAAkBF,EAAWzD,OAAO4D,EAAgBJ,EAAME,WAAWG,OAAO,sBAAsBC,EAAgB,IAAIH,EAAkBF,EAAWlB,KAAK,WAAW,IAAIwB,EAAOvE,EAAEiD,MAAMuB,QAAQ,EAAExE,EAAEiD,MAAME,KAAK,cAAcoB,KAAsHE,gBAAxGX,EAAMlB,SAAS,SAAS/C,QAAQC,IAAI,WAAgCsE,EAAgBjB,KAAK,eAAoDmB,EAAgBA,EAAgB,KAAmKR,EAAMlB,SAAS,sBAAsBkB,EAAMlB,SAAS,sBAAsB/C,QAAQC,IAAI,uBAA0BsE,EAAgBJ,EAAME,WAAWG,OAAO,gBAAoDlB,KAAK,eAAoDmB,EAAgBA,EAAgB,MAAmKR,EAAMlB,SAAS,gBAAgB/C,QAAQC,IAAI,gDAAmDsE,EAAgBJ,EAAME,WAAWG,OAAO,eAAmDlB,KAAK,gBAAyQiB,EAAgBjB,KAAK,gBAA1OmB,EAAgBA,EAAgB,IAAz3BP,EAAYxB,IAAI,QAAQ+B,EAAgB,KAAKP,EAAYxB,IAAI,cAAckC,gBAAgB,KAAKV,EAAY1B,QAAQ,CAACqC,WAAWD,iBAAiB,KAAkqC,SAASE,YAAYC,EAAKC,GAAQ7E,EAAE,cAAc6E,GAAQ9B,KAAK,WAAW/C,EAAEiD,MAAMhD,YAAY4E,KAAW7E,EAAE,yBAA0BkB,OAAO0D,EAAKE,KAAKC,IAAIC,KAAK,OAAQC,QAAQ,cAAclC,KAAK,WAAW/C,EAAEiD,MAAM/C,SAAS2E,KAAY,SAASK,eAAenD,WAAW,WAAkD,IAAkCoD,EAAzEnF,EAAE,QAAQC,YAAY,iBAAoBD,EAAE,QAAQ4E,KAAK,YAAgBO,EAAQnF,EAAE,QAAQ4E,KAAK,WAAW5E,EAAE,cAAcqC,QAAQ,CAACC,UAAUtC,EAAE,IAAImF,GAAYjD,SAASC,IAAI,GAAG,IAAI,WAAW,IAAIiD,EAAUpF,EAAED,QAAQqF,EAAUtD,GAAG,mBAAmB,WAAmI,GAA1G9B,EAAEiD,MAAMX,YAAuBtC,EAAE,SAASkC,SAASC,MAA0DnC,EAAE,QAAQE,SAAS,4BAA4BkF,EAAUC,IAAI,uBAAwBrF,EAAE,QAAQsF,WAAW,mBAAyBtF,EAAE,cAAcqC,QAAQ,CAACC,UAAUtC,EAAE,SAASkC,SAASC,IAAI,GAAG,IAAI,WAAW,IAAIiD,EAAUpF,EAAED,QAAQqF,EAAUtD,GAAG,mBAAmB,WAAmI,GAA1G9B,EAAEiD,MAAMX,YAAuBtC,EAAE,SAASkC,SAASC,MAA0DnC,EAAE,QAAQE,SAAS,4BAA4BkF,EAAUC,IAAI,0BAA8B,KAAM,SAASE,OAAO,IAAIC,EAAyC,IAAxBxF,EAAED,QAAQoB,cAAuBsE,EAAMC,KAAKC,MAAM,EAAEH,EAAiB,KAAO,IAAMxF,EAAE,aAAa+C,KAAK,WAAW,IAAI6C,EAAU5F,EAAEiD,MAAMf,SAASC,IAAQ0D,EAAa7F,EAAED,QAAQuC,YAAoC,GAAxBtC,EAAED,QAAQoB,cAAqByE,EAAUC,EAAiBD,EAAUC,EAAaL,EAAkBxF,EAAEiD,MAAMV,IAAI,CAACuD,WAAW,sBAAsBnD,QAAQ,IAAU3C,EAAEiD,MAAMV,IAAI,CAACuD,WAAW,uBAAuBnD,SAASkD,EAAaD,GAAWH,IAAezF,EAAEiD,MAAMV,IAAI,UAAU,MAAYvC,EAAED,QAAQuC,YAAYtC,EAAED,QAAQuB,UAAUtB,EAAEP,UAAU6B,UAAUtB,EAAE,aAAauC,IAAI,CAACuD,WAAW,sBAAsBnD,QAAQ,IAAM,SAASoD,kBAAkB/F,EAAE,oBAAoBgG,SAAS,WAAmB,SAASC,iBAAiBjG,EAAE,oBAAoBgG,SAAS,UAAkB,SAASE,mBAAmBlG,EAAE,oBAAoBgG,SAAS,YAAoB,SAASG,mBAAsBnG,EAAE,oBAAoB4C,SAAS,cAAa5C,EAAE,oBAAoBC,YAAY,YAAYD,EAAE,oBAAoBE,SAAS,WAAmB,SAASkG,sBAAyBpG,EAAE,uBAAuBQ,QAAQR,EAAE,uBAAuB2D,SAAW,SAAS0C,SAASjB,GAA+B,IAAIkB,EAAwqBvG,OAAOJ,iBAAiB,SAAS,WAAcK,EAAE,QAAQ4C,SAAS,sBAAuB/C,QAAQC,IAAI,iDAA6DD,QAAQC,IAAI,0BAA0BsF,EAAUpF,EAAE,2BAA8CuG,cAAcD,GAA6B,SAAuBlB,GAAWvF,QAAQC,IAAI,gCAAgC,IAAI0G,EAAYpB,EAAU1C,QAAQ,EAAE+D,EAAYrB,EAAU9D,SAAS,EAAEoF,EAAYtB,EAAU1C,QAAQiE,EAAYvB,EAAU9D,SAAS8D,EAAUtD,GAAG,CAAC8E,UAAU,SAAmBC,GAAG,IAAIC,EAAY1B,EAAUlD,SAASsE,EAAYd,KAAKqB,IAAIF,EAAEG,MAAMF,EAAYG,KAAKP,GAAaD,EAAYf,KAAKqB,IAAIF,EAAEK,MAAMJ,EAAY3E,IAAIwE,GAAgBH,EAAY,IAAEA,EAAY,GAAKC,EAAY,IAAEA,EAAY,MAAM,IAAIU,EAAc/B,EAAUtC,KAAK,iBAAiBsE,EAAQ,EAAEC,EAAQ,EAAEf,EAAUgB,YAAY,WAAWF,GAAUZ,EAAYY,EAAWC,GAAUZ,EAAYY,EAAWF,EAAc5E,IAAI,CAAC0E,KAAKG,EAAQjF,IAAIkF,IAAUxH,QAAQC,IAAI,uBAAwB,KAAOyH,CAAcnC,MAAepF,EAAE,2BAA2B4D,MAAM,WAAW2C,cAAcD,KAA5uD,SAAuBlB,GAAW,IAAIoB,EAAYpB,EAAU1C,QAAQ,EAAE+D,EAAYrB,EAAU9D,SAAS,EAAEoF,EAAYtB,EAAU1C,QAAQiE,EAAYvB,EAAU9D,SAAS8D,EAAUtD,GAAG,CAAC8E,UAAU,SAAmBC,GAAG,IAAIC,EAAY1B,EAAUlD,SAASsE,EAAYd,KAAKqB,IAAIF,EAAEG,MAAMF,EAAYG,KAAKP,GAAaD,EAAYf,KAAKqB,IAAIF,EAAEK,MAAMJ,EAAY3E,IAAIwE,GAAgBH,EAAY,IAAEA,EAAY,GAAKC,EAAY,IAAEA,EAAY,MAAM,IAAIU,EAAc/B,EAAUtC,KAAK,iBAAiBsE,EAAQ,EAAEC,EAAQ,EAAEf,EAAUgB,YAAY,WAAWF,GAAUZ,EAAYY,EAAWC,GAAUZ,EAAYY,EAAWF,EAAc5E,IAAI,CAAC0E,KAAKG,EAAQjF,IAAIkF,KAAY,KAAqnCE,CAAcnC,GAAY,SAASoC,eAAkBxH,EAAE,iBAAiBQ,QAAQX,QAAQC,IAAI,qBAEnnU,SAAS2H,OAAOC,GAAQ7H,QAAQC,IAAI,8BAA8B,IAAI6H,EAAgBD,EAAO5E,KAAK,OAAO6E,EAAgBpF,IAAI,YAAY,OAAOoF,EAAgB5E,KAAK,WAAWlD,QAAQC,IAAI,qBAAqB,IAAIkD,EAAWhD,EAAEiD,MAAMD,EAAWE,aAAa,GAAG,WAAWrD,QAAQC,IAAI,sBAAiCkD,EAAWG,KAAK,OAA3B,IAAkCC,EAAOJ,EAAWG,KAAK,YAAYH,EAAWG,KAAK,MAAMC,GAAQJ,EAAW9C,SAAS,cAAiB,SAAS0H,YAAYF,GAAQ7H,QAAQC,IAAI,8BAAmD4H,EAAO5E,KAAK,OAAwBC,KAAK,WAAWlD,QAAQC,IAAI,oCAAoC,IAAI+H,EAAe7H,EAAEiD,MAAM4E,EAAe3E,aAAa,GAAG,WAAWrD,QAAQC,IAAI,sBAAiC+H,EAAe1E,KAAK,OAA/B,IAAsCC,EAAOyE,EAAe1E,KAAK,YAAY0E,EAAe1E,KAAK,MAAMC,GAAQyE,EAAe3H,SAAS,cAAiB,SAAS4H,UAAUJ,GAAQ1H,EAAE+H,UAAU,sDAAsD,SAASnD,EAAKoD,EAAWC,GAAOpI,QAAQC,IAAI,qCAAqC,IAAIoI,EAAaR,EAAO5E,KAAK,uBAAuB2E,OAAOS,GAAcA,EAAaC,SAAS,CAACjF,cAAa,EAAKkF,gBAAe,EAAKC,iBAAgB,EAAMC,YAAW,EAAKC,YAAW,EAAKC,WAAW,CAACC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,QAAU,SAASC,IAAIrB,GAAkD,IAAgmBlD,EAA1oB3E,QAAQC,IAAI,8BAAoD,EAAnBE,EAAE,UAAUQ,SAAilBgE,EAAM,EAAEzE,OAAOiJ,cAAc,WAAWC,aAAY,EAAKjJ,EAAED,QAAQmJ,QAAQ,gBAAiBnJ,OAAOoJ,eAAe,WAAW,GAAGF,YAAY,OAAOlJ,OAAOiJ,gBAAgB,IAAII,EAAW3J,SAAS4J,cAAc,UAAUD,EAAWE,aAAa,OAAO,mBAAmBF,EAAWE,aAAa,MAAM,+GAA+G7J,SAAS8J,qBAAqB,QAAQ,IAAI9J,SAASsB,iBAAiByI,YAAYJ,IAAcpJ,EAAED,QAAQ0J,KAAK,cAA9jC,WAAuSV,IAAI,IAAIW,OAAOC,KAAKC,IAAInK,SAASoK,eAAe,SAAlT,CAACC,OAAO,CAACC,IAAI,WAAWC,KAAK,mBAAoBC,KAAK,GAAGC,YAAW,EAAMC,aAAY,EAAMC,WAAU,EAAKC,aAAY,EAAMC,gBAAe,EAAMC,cAAa,EAAMC,mBAAkB,EAAMC,oBAAmB,EAAKC,OAAO,CAAC,CAACC,QAAU,CAAC,CAACC,WAAa,YAAgF,IAAIC,EAASC,SAAS,yCAAyCtG,IAAwB,IAAIkF,OAAOC,KAAKoB,OAAO,CAACC,SAAS,CAACjB,IAAI,WAAWC,KAAK,mBAAoBjB,IAAIA,IAAIkC,WAAU,EAAMC,KAAKL,MAA8iB9K,OAAOoJ,kBAEr8E,SAASgC,SAA4C,EAAhCnL,EAAE,uBAAuBQ,QAAUR,EAAE,uBAAuB+C,KAAK,WAAWlD,QAAQC,IAAI,4BAAmD8H,YAAR5H,EAAEiD,SAAqL,EAAhJjD,EAAE,uIAAuIQ,QAAUR,EAAE,uIAAuI+C,KAAK,WAAWlD,QAAQC,IAAI,4IAAmK2H,OAARzH,EAAEiD,SAA6D,EAA7BjD,EAAE,oBAAoBQ,QAAUR,EAAE,oBAAoB+C,KAAK,WAAWlD,QAAQC,IAAI,sBAA6CgI,UAAR9H,EAAEiD,SAA8D,EAA3BjD,EAAE,kBAAkBQ,SAAUX,QAAQC,IAAI,oBAAoBE,EAAE,kBAAkB+C,KAAK,WAAkCgG,IAAR/I,EAAEiD,UAA0BjD,EAAED,QAAQqL,OAAO,WAAW7F,SAElhC,SAAS8F,QAAQC,GAaf,OATED,QADoB,mBAAXE,QAAoD,iBAApBA,OAAOC,SACtC,SAAUF,GAClB,cAAcA,GAGN,SAAUA,GAClB,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAI9GA,GAGjB,SAASK,YAAYC,GACnB3I,KAAK4I,QAAUD,EAGjB,SAASE,gBAAgBC,GACvB,IAAIC,EAAOC,EAqBX,SAASC,EAAOC,EAAKC,GACnB,IACE,IAAIC,EAASN,EAAII,GAAKC,GAClBR,EAAQS,EAAOT,MACfU,EAAeV,aAAiBD,YACpCY,QAAQC,QAAQF,EAAeV,EAAMC,QAAUD,GAAOa,KAAK,SAAUL,GAC/DE,EACFJ,EAAe,WAARC,EAAmB,SAAW,OAAQC,GAI/CM,EAAOL,EAAOM,KAAO,SAAW,SAAUP,IACzC,SAAUQ,GACXV,EAAO,QAASU,KAElB,MAAOA,GACPF,EAAO,QAASE,IAIpB,SAASF,EAAOG,EAAMjB,GACpB,OAAQiB,GACN,IAAK,SACHb,EAAMQ,QAAQ,CACZZ,MAAOA,EACPe,MAAM,IAER,MAEF,IAAK,QACHX,EAAMc,OAAOlB,GACb,MAEF,QACEI,EAAMQ,QAAQ,CACZZ,MAAOA,EACPe,MAAM,KAKZX,EAAQA,EAAMlH,MAGZoH,EAAOF,EAAMG,IAAKH,EAAMI,KAExBH,EAAO,KAIXhJ,KAAK8J,QArEL,SAAcZ,EAAKC,GACjB,OAAO,IAAIG,QAAQ,SAAUC,EAASM,GACpC,IAAIE,EAAU,CACZb,IAAKA,EACLC,IAAKA,EACLI,QAASA,EACTM,OAAQA,EACRhI,KAAM,MAGJmH,EACFA,EAAOA,EAAKnH,KAAOkI,GAEnBhB,EAAQC,EAAOe,EACfd,EAAOC,EAAKC,OAyDQ,mBAAfL,EAAIkB,SACbhK,KAAKgK,YAASC,GAsBlB,SAASC,SAAoCnN,EAAE,mBAA7B,IAA0DoN,EAAeC,EAAarN,EAAE,2BAA2BsN,QAAQ5B,UAAU6B,kBAAkB,SAASC,GAAUA,EAASA,GAAU,eAAe,IAAIC,EAAMxK,KAAK,OAAOA,KAAKyK,MAAM3E,IAAI,SAAS4E,GAAM,MAAM,CAACxK,KAAKwK,EAAKC,QAAQC,aAAaL,GAAUM,EAAEH,EAAKI,KAAKD,EAAEL,EAAMO,OAAOtL,UAAY4K,QAAQ5B,UAAUuC,gBAAgB,SAASC,EAAU/K,GAAM,GAAI+K,EAAJ,CAAqC,GAAqB,iBAAXA,EAAqB,IAAIA,EAAUC,KAAKC,MAAMF,GAAY,MAAMG,GAAqB,YAAdpL,KAAKqL,SAAkBnL,EAAKA,GAAM,eAAeF,KAAKsL,eAAetL,KAAKyK,MAAMQ,EAAUnF,IAAI,SAASyF,GAAc,IAAIC,EAAS,IAAItL,EAAK,KAAKqL,EAAarL,KAAK,KAASuL,EAASzL,KAAK2K,QAAQe,cAAcF,GAAcd,EAAK1K,KAAK2L,QAAQF,GAAuD,OAA7Cf,EAAKI,KAAKD,EAAEU,EAAaV,EAAE7K,KAAK+K,OAAOtL,MAAaiL,GAAO1K,MAAMA,KAAK4L,mBAAta5L,KAAKqL,UAAibtO,EAAE,aAAa8O,OAAO,SAASjI,GAAGA,EAAEkI,iBAAiB,IAAItB,EAAMzN,EAAEiD,MAAM8B,EAAI0I,EAAMtK,KAAK,UAAU6L,EAAOvB,EAAMtK,KAAK,UAAUyB,EAAK6I,EAAMwB,iBAAiBC,EAAMlP,EAAE,kBAAyhB,OAApgBA,EAAE,sBAAsBQ,QAAyB,oBAAV2O,SAAuBvK,EAAKwK,KAAK,CAACC,KAAK,4BAA4BzD,MAAMuD,QAAQG,IAAI,qBAAqBC,eAAgBvP,EAAEwP,KAAK,CAACzK,IAAIA,EAAIiK,OAAOA,EAAOS,WAAW,SAAoBC,GAAKA,EAAIC,iBAAiB,aAAaC,YAAYC,QAASjL,KAAKA,EAAKkL,SAAS,SAASC,OAAO,SAASnL,GAAMsK,EAAMA,MAAM,QAAQlP,EAAE,0BAA0BE,SAAS,2BAA2B6B,WAAW,WAAW/B,EAAE,0BAA0BC,YAAY,4BAA6B,QAAgB,IAAS,IAAI+P,EAAoB,WAA+C,IAAmCC,EAAUjQ,EAAE,yBAAoE,GAAxCA,EAAE,8BAA8BQ,OAAWyP,EAAUC,OAAaD,EAAUE,QAAu2C,SAASC,EAAgBC,GAAW,IAAIC,EAAMD,EAAUnN,aAAa,WAAWlD,EAAE,QAAQE,SAAS,iBAAiB,IAA4BqQ,EAA39C/Q,EAAGgR,EAAeC,EAAi7CC,GAAc,EAA+BC,GAAkB,EAAM,SAASC,IAAe/Q,QAAQC,IAAI,kBAAkB,IAAy1B+Q,EAA2CC,EAA+DC,EAAyCC,EAA0oJC,EAAlnLC,EAAeC,iBAAiB1R,SAAS2R,KAAK,UAAUC,QAAQC,EAAoBJ,EAAeK,QAAQ,kBAAkB,MAAMC,EAAyB,aAA6C3R,QAAQC,IAAI,mBAAmBoR,GAAmBrR,QAAQC,IAAI,wBAAwBwR,GAAwBzR,QAAQC,IAAI,6BAA6B0R,GAA6B3R,QAAQC,IAAI,kBAAkB4Q,GAAqBY,IAAsBE,GAA2Bd,EAAlS,YAAimOQ,GAAwCR,GAAe7Q,QAAQC,IAAI,qDAAqDwQ,EAAMmB,QAAQ,WAAWf,GAAc,EAAM7Q,QAAQC,IAAI,8BAAiCE,EAAE,QAAQ4C,SAAS,uBAAuB2N,GAAiB,EAAKvQ,EAAE,QAAQC,YAAY,uBAA4BsQ,GAAiB,GAAa1Q,QAAQC,IAAI,kCAA9pOD,QAAQC,IAAI,iDAAiDwQ,EAAMmB,QAAQ,CAACC,aAAa,oBAAoBC,YAAY,cAActJ,iBAAgB,EAAKuJ,cAAa,EAAKC,YAAW,IAA2Ed,GAA/DD,EAAaR,EAAMrL,QAAQ,eAAenC,KAAK,iBAA2CK,KAAK,SAA+B,GAAnBwN,IAA0BA,GAAkB,EAASE,EAAWP,EAAMxN,KAAK,qBAAoFiO,GAA/DD,EAAaR,EAAMrL,QAAQ,eAAenC,KAAK,iBAA2CK,KAAK,SAAS6N,EAAQV,EAAMrL,QAAQ,eAAenC,KAAK,2BAA2B+N,EAAW9N,KAAK,SAAS+O,GAAG,IAAI1M,EAAUpF,EAAEiD,MAAM8O,EAAe3M,EAAUtC,KAAK,0BAA0BkP,EAAaD,EAAe5O,KAAK,OAAO8O,EAAiB7M,EAAUtC,KAAK,oBAAoBoP,EAAO9M,EAAUjC,KAAK,gBAAgBgP,EAAQ/M,EAAUtC,KAAK,aAAasP,EAAcD,EAAQE,OAAO,SAASC,EAAUH,EAAQhP,KAAK,MAA8D,EAAtB4O,EAAevR,QAAU+R,qBAAqBnN,OAAhFoN,OAAeC,GAA2GC,SAAStN,EAAUkL,GAAOqC,YAAYT,GAAQU,6BAA6BZ,EAAa,SAASa,GAAaZ,EAAiB9O,KAAK,MAAM0P,OAAsBN,qBAAqBnN,OAA/SoN,OAAeC,GAA0UC,SAAStN,EAAUkL,GAAOqC,YAAYT,IAASlS,EAAE,IAAIsS,GAAcQ,eAAe,CAACC,SAASX,EAAc1P,MAAM,OAAO1B,MAAM,WAAWgS,OAAO,SAAgBC,EAAMC,GAAIrT,QAAQC,IAAI,SAASoT,GAAO,IAAIC,EAAUnT,EAAEkT,EAAGvF,KAAKC,SAASzK,KAAK,sBAA0BiQ,EAAUpT,EAAEkT,EAAGvF,KAAKC,SAASzK,KAAK,qBAAqB4O,EAAe5O,KAAK,MAAMgQ,GAAWpB,EAAe5O,KAAK,oBAAoBiQ,GAAWC,kBAAkBjO,EAAUgO,GAAWE,gBAAiBC,OAAO,WAA0B1T,QAAQC,IAAI,uCAAuCsF,EAAUtC,KAAK,6BAA6Bc,WAAYkP,eAAe,cAAc5S,SAAS,0BAA2B8Q,EAAQpN,MAAM,WAAW/D,QAAQC,IAAI,mBAAmB,IAAI0T,EAAMxT,EAAEiD,MAAM6N,EAAa0C,EAAMvO,QAAQ,eAAenC,KAAK,gBAAgB2Q,EAAeD,EAAMvO,QAAQ,eAAenC,KAAK,kBAAkB4Q,EAAiBF,EAAMvO,QAAQ,eAAenC,KAAK,aAAa6Q,EAAUD,EAAiB5Q,KAAK,uBAAuB8Q,EAAMD,EAAUC,QAAQC,EAAIJ,EAAe1K,IAAI,WAAW,OAAO/I,EAAEiD,MAAME,KAAK,kBAA4D+O,EAAzBxM,KAAKoO,IAAIC,MAAMrO,KAAKmO,GAA4B,EAAE7T,EAAE4T,GAAOI,YAAYL,GAAW,IAAIM,EAAaP,EAAiB5Q,KAAK,uBAAuBoR,EAASlU,EAAE,8BAA8BQ,OAAO,EAAE2R,EAAQ8B,EAAanR,KAAK,aAAasP,EAAcD,EAAQE,OAAO,SAAS4B,EAAanR,KAAK,oCAAoCa,SAASsQ,EAAa9Q,KAAK,eAAe+O,GAAQwB,EAAiB5Q,KAAK,6BAA6BK,KAAK,OAAO,SAASqB,EAAM6K,GAAM,OAAOA,EAAKkC,QAAQ,UAAU,IAAI2C,EAAS,OAAQR,EAAiB5Q,KAAK,8BAA8BK,KAAK,OAAO,SAASqB,EAAM6K,GAAM,OAAOA,EAAKkC,QAAQ,UAAU,IAAI2C,EAAS,OAAQD,EAAanR,KAAK,mBAAmBK,KAAK,KAAK,kBAAkB+O,GAAW+B,EAAanR,KAAK,qBAAqBK,KAAK,KAAK,oBAAoB+O,GAAW+B,EAAa9Q,KAAK,kBAAkB,GAAG+O,GAAW+B,EAAanR,KAAK,aAAaK,KAAK,QAAQ,GAAG+O,GAAW+B,EAAanR,KAAK,aAAaK,KAAK,KAAK,mBAAmB+O,GAAW,IAAjoKiC,EAAS9D,EAA4nKiC,EAAUH,EAAQhP,KAAK,MAAM4O,EAAekC,EAAanR,KAAK,0BAA0B9C,EAAE,IAAIsS,GAAcQ,eAAe,CAACC,SAASX,EAAc1P,MAAM,OAAO1B,MAAM,WAAWgS,OAAO,SAAgBC,EAAMC,GAAI,IAAIC,EAAUnT,EAAEkT,EAAGvF,KAAKC,SAASzK,KAAK,sBAA0BiQ,EAAUpT,EAAEkT,EAAGvF,KAAKC,SAASzK,KAAK,qBAAqB4O,EAAe5O,KAAK,MAAMgQ,GAAWpB,EAAe5O,KAAK,oBAAoBiQ,GAAWC,kBAAkBjO,UAAUgO,GAAWE,gBAAiBC,OAAO,WAA0BU,EAAanR,KAAK,6BAA6Bc,WAAYkP,eAAe,cAAc5S,SAAS,wBAAhuLiU,EAAswLnU,EAAE4T,IAA/vLvD,EAAswLC,GAAjvLxN,KAAKqR,GAAUpR,KAAK,SAAS+O,EAAEpD,GAAU,IAAI0F,EAAQ,IAAIC,YAAY3F,GAAU2B,EAAUoB,QAAQ,wBAAwB2C,KAA+nLE,UAAUpC,GAAQS,YAAYT,GAAQQ,SAAS1S,EAAE4T,GAAOtD,GAAOA,EAAMmB,QAAQ,WAAWzR,EAAE4T,IAAQ,IAAI1F,EAAUmC,EAAUoB,QAAQ,oBAAoB,gBAAgB8C,EAAcpG,KAAKqG,UAAUtG,GAAkS,OAAvR4C,EAAa2D,IAAIF,GAAevE,EAAoB0D,GAAkBgB,aAAaC,QAAQ,cAAcJ,GAAevU,EAAE4T,GAAO1T,SAAS,cAAcF,EAAE,cAAcqC,QAAQ,CAACC,UAAUtC,EAAE4T,GAAO1R,SAASC,KAAK,KAAKJ,WAAW,WAAW/B,EAAE4T,GAAO3T,YAAY,eAAgB,MAAY,IAASD,EAAEP,UAAUqC,GAAG,QAAQ,wBAAwB,WAAW,IAAiG8S,EAA2ClB,EAA8C5C,EAA2H5C,EAA4DqG,EAA7W5G,EAAK3N,EAAE,8BAAqd,OAAva,GAAb2N,EAAKnN,OAAWmN,EAAK7K,KAAK,SAAS2R,IAAI,KAAcG,EAAS5U,EAAEiD,MAAMgC,QAAQ,kBAAkByO,EAAiB1T,EAAEiD,MAAMgC,QAAQ,aAAa6L,EAAaR,EAAMrL,QAAQ,eAAenC,KAAK,gBAAgBwN,EAAMmB,QAAQ,SAASmD,GAAUnD,QAAQ,eAAmBvD,EAAUoC,EAAMmB,QAAQ,oBAAoB,gBAAgB8C,EAAcpG,KAAKqG,UAAUtG,GAAW4C,EAAa2D,IAAIF,GAAevE,EAAoB0D,KAA0B,KAAa1T,EAAE,QAAQ4C,SAAS,aAAc0N,EAAMmB,QAAQ,kBAAkBV,EAAc,iBAAsG,OAA5EE,EAAkByD,aAAa9F,QAAQ,kBAA+CqC,EAAkBF,GAAeT,EAAMmB,QAAQ,kBAAkBR,EAAkB,iBAAoBjR,EAAE,QAAQ4C,SAAS,cAAc0N,EAAMxN,KAAK,qBAAqBC,KAAK,SAAS+O,EAAEpD,GAAU,IAAI0F,EAAQ,IAAIC,YAAY3F,GAAU4B,EAAMmB,QAAQ,wBAAwB2C,KAAY9D,EAAMxO,GAAG,qBAAqB,WAAWjC,QAAQC,IAAI,8CAA8C,IAAIoO,EAAUoC,EAAMmB,QAAQ,oBAAoB,gBAAoB8C,EAAcpG,KAAKqG,UAAUtG,GAAW4C,EAAa2D,IAAIF,GAAezD,EAAa3N,KAAK,QAAQoR,GAAejB,eAAkBtT,EAAE,qBAAqBQ,QAAQR,EAAE,qBAAqB8C,KAAK,6BAA6Bc,YAAkB/D,QAAQC,IAAI,iBAAiBwQ,EAAMxN,KAAK,qBAAqBC,KAAK,SAAS+O,EAAEpD,GAAU,IAAI0F,EAAQ,IAAIC,YAAY3F,GAAU4B,EAAMmB,QAAQ,wBAAwB2C,KAAY9D,EAAMxO,GAAG,qBAAqB,WAAWjC,QAAQC,IAAI,sCAAsCwQ,EAAMmB,QAAQ,UAAUvI,QAAQ,kBAAkB,IAAIgF,EAAUoC,EAAMmB,QAAQ,oBAAoB,gBAAoB8C,EAAcpG,KAAKqG,UAAUtG,GAAW4C,EAAa2D,IAAIF,GAAezD,EAAa3N,KAAK,QAAQoR,GAAeG,aAAaC,QAAQ,cAAcJ,GAAejB,eAAkBtT,EAAE,qBAAqBQ,QAAQR,EAAE,qBAAqB8C,KAAK,6BAA6Bc,WAAgB5D,EAAE,QAAQ4C,SAAS,aAAa/C,QAAQC,IAAI,sDAAuD4Q,GAAc,EAAK7Q,QAAQC,IAAIyQ,EAAiB,qBAA0C,IAAnBA,IAAyB1Q,QAAQC,IAAIyQ,GAAkBvQ,EAAE,QAAQE,SAAS,uBAAuB6B,WAAW,WAAWuO,EAAMmB,QAAQ,UAAUvI,QAAQ,mBAAoB,MAA+Z0H,IAAe5Q,EAAED,QAAQ+B,GAAG,UAA/wStC,EAAiySoR,EAA9xSJ,EAA2yS,IAA7wS,WAAwBC,GAASoE,aAAapE,GAAgD1O,WAAtC,WAAmBvC,IAAKiR,EAAQ,MAAyBD,GAAW,UAA2pSxQ,EAAE,iCAAiC8B,GAAG,SAAS,WAAmE,IAAIgT,EAA5D1H,EAAepN,EAAE,iCAAiCyU,MAAmCzU,EAAE,4BAA4ByU,IAAI,GAAGK,GAAcjV,QAAQC,IAAI,mBAAmBsN,GAAmBvN,QAAQC,IAAI,cAAcgV,KAAiB9U,EAAE,eAAe8B,GAAG,QAAQ,WAAWjC,QAAQC,IAAI,oBAAttSD,QAAQC,IAAI,4BAA4BE,EAAE,QAAQE,SAAS,mBAAmB6B,WAAW,WAAc/B,EAAE,gBAAgB+U,IAAI,UAAUvU,SAAQX,QAAQC,IAAI,yBAAyBE,EAAE,gBAAgB8C,KAAK,UAAUa,UAAa3D,EAAE,0BAA0BQ,SAAQX,QAAQC,IAAI,yBAAyBE,EAAE,sBAAsB8C,KAAK,OAAOa,UAAU,IAAIqR,EAAS,EAAEjV,OAAOkV,WAAW,IAAKC,YAAYzV,SAASkP,cAAc,eAAe,CAACwG,MAAMH,EAASI,SAA4B,EAApBrV,OAAOsV,cAAiB5I,KAAK,SAAS6I,GAAQ,IAAIC,EAAI9V,SAAS4J,cAAc,OAAOkM,EAAIC,IAAIF,EAAOG,YAAYC,UAAUJ,EAAO7V,SAASkP,cAAc,sBAAsBnF,YAAY+L,GAAKvV,EAAE,QAAQ8C,KAAK,yCAAyC2R,IAAIc,EAAIC,KAAKxV,EAAE,QAAQE,SAAS,wBAAwBF,EAAE,mBAAmBC,YAAY,aAAaC,SAAS,aAAaF,EAAE,QAAQC,YAAY,mBAAmBD,EAAE,QAAQC,YAAY,uBAAyB,KAA02QD,EAAE,mBAAmB8B,GAAG,QAAQ,WAAW,IAAoD6T,EAArCD,UAAUD,UAAU,aAAoClE,QAAQ,mBAAmB,iCAAiCvR,EAAE,mBAAmBmD,KAAK,WAAciK,EAAe,0BAA0BjK,KAAK,OAAOwS,KAAY3V,EAAE,2BAA2B4D,MAAM,WAAc5D,EAAE,QAAQ4C,SAAS,uBAAuB5C,EAAE,QAAQC,YAAY,sBAAsBD,EAAE,cAAcC,YAAY,oBAAwBD,EAAE,QAAQE,SAAS,sBAAsBF,EAAE,cAAcE,SAAS,kBAAkBF,EAAE,cAAcqC,QAAQ,CAACC,WAAUtC,EAAE,eAAekC,SAASC,KAAO,WAAqC,WAAuC,GAA2E,YAAjD,oBAAfuS,aAA2B,YAAYrJ,QAAQqJ,eAA2B,IAAIA,aAAaC,QAAQ,eAAe,GAAGD,aAAakB,WAAW,gBAAiB,MAAM/O,GAAGgP,QAAQnK,UAAUoK,SAASD,QAAQnK,UAAUiJ,QAAQkB,QAAQnK,UAAUiJ,QAAQ,aAAaoB,MAAM,sNAAwNC,GAA8BhW,EAAE,SAAS+C,KAAK,WAA6B,IAA2RkT,EAA7S5F,UAAUrQ,EAAEiD,MAASjD,EAAE,QAAQ4C,SAAS,cAAcoN,EAAoBK,WAAWD,EAAgBC,YAA0D,OAAtCqE,aAAa9F,QAAQ,gBAAuBoB,EAAoBK,WAAWD,EAAgBC,WAAe4F,EAAYxW,SAASoK,eAAe,kBAAkBqM,YAAoBD,EAAYE,SAASC,WAAW1B,aAAa9F,QAAQ,gBAAgB5O,EAAE,mBAAmBqW,QAAQrW,EAAE,mBAAmBsW,OAAOL,GAAajG,EAAoBK,WAAWD,EAAgBC,WAAWrQ,EAAE,wBAAwB4D,MAAM,WAAW/D,QAAQC,IAAI,0BAA0B4U,aAAakB,WAAW,eAAelB,aAAakB,WAAW,eAAeW,SAASC,cAAkCnQ,SAASgH,GAAztWxL,mBAAmB2F,eAAouW,SAAS8L,eAAezT,QAAQC,IAAI,kBAAqBE,EAAE,QAAQ4C,SAAS,0BAAyB5C,EAAE,QAAQE,SAAS,oBAAoBF,EAAE,gBAAgByW,KAAK,yBAAyC,GAAbC,cAAmB7W,QAAQC,IAAI,kDAAkD4W,aAAY,EAAMpP,YAAY,WAAW,IAAIqP,EAAW3W,EAAE,mBAAmBH,QAAQC,IAAI,0CAA0C8W,iBAAiBD,IAAc,MAAS,SAASjE,SAAStN,EAAUkL,GAAO,IAAIkD,EAAMpO,EAAUyR,EAAgBzR,EAAUtC,KAAK,6BAA6BgU,IAAI,oCAAoCC,EAAkB3R,EAAUtC,KAAK,oCAAgUkU,GAA5QxD,EAAM1Q,KAAK,kBAAkB2R,MAAyBjB,EAAM1Q,KAAK,qBAAqB2R,MAA0BjB,EAAM1Q,KAAK,sBAAsB2R,MAA0BjB,EAAM1Q,KAAK,uBAAuB2R,MAAkBjB,EAAM1Q,KAAK,sBAAsB2R,MAAwBjB,EAAM1Q,KAAK,gCAAgC2R,MAAM,KAAIwC,EAAYzD,EAAM1Q,KAAK,gCAAgC2R,MAAM,IAAIyC,GAAgB1D,EAAM1Q,KAAK,2BAA2B2R,MAAtCjB,GAAgD2D,EAAa3D,EAAM1Q,KAAK,SAASsU,WAAW5D,EAAM1Q,KAAK,uBAAuB+T,EAAgBjT,MAAM,WAAW/D,QAAQC,IAAI,6BAAgC0T,EAAM5Q,SAAS,qBAAqB4Q,EAAMvT,YAAY,oBAAoBD,EAAE,QAAQC,YAAY,iBAAqBD,EAAE,mCAAmCC,YAAY,oBAAoBuT,EAAMtT,SAAS,oBAAoBF,EAAE,QAAQE,SAAS,eAAesT,EAAM1Q,KAAK,cAAcc,WAAYmT,EAAkBnT,MAAM,WAAW/D,QAAQC,IAAI,0BAA0B,IAAuJuX,EAAnJC,EAAY9D,EAAM1Q,KAAK,sBAAsByU,EAAgBC,OAAOF,EAAY7C,OAAoC4C,EAAT,KAAjBE,EAA6C,EAA+BC,OAAOD,EAAgB,IAAKD,EAAY7C,IAAI4C,GAAoBxX,QAAQC,IAAI,qBAAqBuX,GAAuB7D,EAAM1Q,KAAK,oBAAoBP,IAAI,YAAY,UAAU8U,EAAmB,QAAQ7D,EAAM1Q,KAAK,4CAA4CP,IAAI,YAAY,UAAU8U,EAAmB,QAAQ7D,EAAM1Q,KAAK,sBAAsB2R,IAAI4C,GAAoB/D,eAA8BtT,EAAE,qBAAsBmX,EAAarV,GAAG,QAAQ,WAAWjC,QAAQC,IAAI,wBAAwB,IAAouC2X,EAAyBC,EAAqCC,EAA9xCC,EAAW5X,EAAEiD,MAAM4U,EAASD,EAAWnD,MAAMqD,EAAcF,EAAWzU,KAAK,mBAAqC,gBAAf2U,GAA+BjY,QAAQC,IAAI,iCAAiCiY,iBAAiBF,EAAS,MAAMD,EAAWzU,KAAK,QAAQ0U,GAAUhY,QAAQC,IAAI,WAAW+X,GAAarE,EAAM1Q,KAAK,oBAAoBP,IAAI,YAAY,UAAUwV,iBAAiB,MAA6B,YAAfD,IAAmD,eAAfA,GAAkCL,EAAU,kBAAkBC,EAAS,mBAAmBG,EAAS,GAAMF,EAAQnE,EAAMrQ,KAAK,SAAS6U,MAAM,KAAK3T,OAAO,SAAS4T,GAAG,OAAoC,IAA7BA,EAAEC,YAAYT,EAAU,KAAUjE,EAAMrQ,KAAK,QAAQwU,EAAQQ,KAAK,KAAKC,QAAQ5E,EAAMtT,SAASwX,GAAUpH,EAAMmB,QAAQ,UAA6Cc,qBAAqBnN,OAApDoN,OAAeC,IAAuG,gBAAfqF,GAAmCL,EAAU,mBAAmBC,EAAS,oBAAoBG,EAAS,GAAMF,EAAQnE,EAAMrQ,KAAK,SAAS6U,MAAM,KAAK3T,OAAO,SAAS4T,GAAG,OAAoC,IAA7BA,EAAEC,YAAYT,EAAU,KAAUjE,EAAMrQ,KAAK,QAAQwU,EAAQQ,KAAK,KAAKC,QAAQ5E,EAAMtT,SAASwX,GAAUpH,EAAMmB,QAAQ,UAA6Cc,qBAAqBnN,OAA5coN,OAAeC,IAA+f,iBAAfqF,GAAoCL,EAAU,eAAeC,EAAS,gBAAgBG,EAAYF,EAAQnE,EAAMrQ,KAAK,SAAS6U,MAAM,KAAK3T,OAAO,SAAS4T,GAAG,OAAoC,IAA7BA,EAAEC,YAAYT,EAAU,KAAUjE,EAAMrQ,KAAK,QAAQwU,EAAQQ,KAAK,KAAKC,QAAQ5E,EAAMtT,SAASwX,IAAkC,0BAAfI,GAAyCd,EAAYa,EAAS,IAAID,EAAWzU,KAAK,QAAQ0U,GAAUrE,EAAM1Q,KAAK,oBAAoBP,IAAI,YAAY,cAAcyU,EAAY,gBAAgBC,EAAY,MAA6B,0BAAfa,GAAyCb,EAAYY,EAAS,IAAID,EAAWzU,KAAK,QAAQ0U,GAAUrE,EAAM1Q,KAAK,oBAAoBP,IAAI,YAAY,cAAcyU,EAAY,gBAAgBC,EAAY,MAA6B,qBAAfa,IAAoCZ,EAAgBW,EAAS,IAAID,EAAWzU,KAAK,QAAQ0U,GAAUrE,EAAM1Q,KAAK,oCAAoCP,IAAI,YAAY,SAAS2U,EAAgB,SAAU,SAAS5C,UAAUpC,GAAQrS,QAAQC,IAAI,4BAA4BoS,GAAW,IAAImG,EAAgBrY,EAAE,mBAAmBkB,OAAOgR,IAASrS,QAAQC,IAAI,kBAAkBuY,GAAoBA,EAAgBzU,MAAM,WAAW,IAAqO0U,EAAjO9E,EAAMxT,EAAEiD,MAAwCsV,GAAjB/E,EAAMrQ,KAAK,MAAiBqQ,EAAMvO,QAAQ,qBAAqB9B,KAAK,iBAAsFH,EAA5DhD,EAAE,kCAAkCkB,OAAOqX,EAAW,MAA2BzV,KAAK,cAAyB,GAAI9C,EAAEwY,WAAWC,GAAGC,OAA0D,OAAGJ,GAAYzY,QAAQC,IAAI,mBAAcwY,EAAWK,UAAeL,EAAWG,GAAGC,MAAM,CAACE,QAAQ,CAAC/L,KAAK,SAASgM,UAAS,KAAmB/W,GAAG,SAAS,WAAWjC,QAAQC,IAAI,uCAAuC,IAAI+K,EAAMyN,EAAWQ,QAAQxJ,IAAI,aAAayJ,QAAQC,SAAShZ,EAAE,sBAAsBkJ,QAAQ,SAAS,IAAI9D,EAAUpC,EAAWiC,QAAQ,qBAAqBuN,EAAe3H,EAAMnI,MAAM+P,EAAgB5H,EAAMvJ,OAAO0Q,EAAanH,EAAM9F,IAAI/B,EAAWyR,IAAI5J,EAAMoO,IAAI7T,EAAUtC,KAAK,OAAOa,SAASyB,EAAUtC,KAAK,eAAewT,OAAOtW,EAAE,aAAa6K,EAAM9F,IAAI,QAAQK,EAAUtC,KAAK,eAAewT,OAAOtW,EAAE,kCAAkC6K,EAAM9F,IAAI,QAAQwN,qBAAqBnN,EAAUoN,EAAeC,GAAiBG,6BAA6BZ,EAAa,SAASa,GAAazN,EAAUtC,KAAK,oBAAoBK,KAAK,MAAM0P,KAAgB7S,EAAE,cAAcqC,QAAQ,CAACC,UAAU8C,EAAUlD,SAASC,KAAK,OAAQmW,EAAWK,QAAc,GAAt+B9Y,QAAQC,IAAI,gCAAo+B,SAAS6S,YAAYT,GAA6BlS,EAAE,qBAAqBkB,OAAOgR,IAA0BtO,MAAM,WAAW,IAAkB2U,EAARvY,EAAEiD,MAAuBgC,QAAQ,qBAAqB9B,KAAK,gBAAgBiC,EAAUpF,EAAE,kCAAkCkB,OAAOqX,EAAW,MAA+E,OAAzEnT,EAAUtC,KAAK,OAAOa,SAASyB,EAAUtC,KAAK,mBAAmB2R,IAAI,KAAW,IAAU,SAAS7B,6BAA6B7N,EAAImU,GAAU,IAAI3D,EAAI,IAAI4D,MAAQ5D,EAAI6D,YAAY,YAAY7D,EAAI8D,OAAO,WAAW,IAAgFC,EAA5EhE,EAAO7V,SAAS4J,cAAc,UAAckQ,EAAIjE,EAAOkE,WAAW,MAAkBlE,EAAOhU,OAAO2B,KAAK3B,OAAOgU,EAAO5S,MAAMO,KAAKP,MAAM6W,EAAIE,UAAU,OAAOF,EAAIG,SAAS,EAAE,EAAEpE,EAAO5S,MAAM4S,EAAOhU,QAAQgY,EAAQhE,EAAOG,YAAYyD,EAASI,GAAShE,EAAO,MAAOC,EAAIC,IAAIzQ,EAAK,SAASsO,kBAAkBjO,EAAUgO,GAA8D,IAAnD,IAAIuG,EAAYvU,EAAUjC,KAAK,SAAS6U,MAAM,KAAalG,EAAE,EAAEA,EAAE6H,EAAYnZ,OAAOsR,KAAiD,GAAzC6H,EAAY7H,GAAG8H,QAAQ,iBAAqBxU,EAAUnF,YAAY0Z,EAAY7H,IAAoB,QAAXsB,GAAmBhO,EAAUjC,KAAK,oBAAoB,KAAKiC,EAAUtC,KAAK,qCAAqC2R,IAAI,KAAKrP,EAAUlF,SAAS,mBAAsC,UAAXkT,IAAqBhO,EAAUjC,KAAK,oBAAoB,KAAKiC,EAAUtC,KAAK,qCAAqC2R,IAAI,KAAKrP,EAAUlF,SAAS,mBAAoB,SAAS0W,iBAAiBD,GAAY9W,QAAQC,IAAI,gCAAgC,IAAI+Z,EAAkBlD,EAAW/C,QAAQiG,EAAkB/W,KAAK,yBAAyBa,SAASkW,EAAkB/W,KAAK,gCAAgCa,SAAS,IAAIsS,EAAY4D,EAAkBC,KAAK,aAAapF,aAAaC,QAAQ,cAAcwB,SAAS4D,SAAS9D,IAAe,SAAS1D,qBAAqBnN,EAAUoN,EAAeC,GAAiB,IAAIe,EAAMpO,EAAU4U,EAAUxG,EAAM9Q,QAAQuX,EAAWzG,EAAMlS,SAAS4Y,EAAuBF,EAAUC,EAAWjX,EAAWwQ,EAAM1Q,KAAK,OAAwDoK,OAAjDsF,EAAeA,KAAiDA,EAAexP,EAAWN,QAAQ+P,EAAgBzP,EAAW1B,UAAkF,IAAI6Y,EAA4B3H,EAAeC,EAAgBe,EAAMrQ,KAAK,aAAa,IAAIH,EAAWG,KAAK,kBAAkB,IAAIqQ,EAAMrQ,KAAK,aAAa+W,GAAwBlX,EAAWG,KAAK,kBAAkBgX,GAA6B3G,EAAMvT,YAAY,uGAAuG+C,EAAW/C,YAAY,gDAAmD+Z,GAAWC,GAAYzG,EAAMtT,SAAS,eAAkBga,GAAwBC,GAA6DA,EAAvBD,GAAoD1G,EAAMtT,SAAS,2BAAiG8Z,EAAUC,EAAYzG,EAAMtT,SAAS,iBAAoC+Z,EAAVD,IAAsBxG,EAAMtT,SAAS,mBAAsBga,GAAwBC,GAA6DA,EAAvBD,GAAoD1G,EAAMtT,SAAS,2BAA4FsS,GAAgBC,EAAiBzP,EAAW9C,SAAS,gBAAyBsS,EAAeC,EAAiBzP,EAAW9C,SAAS,kBAA0CuS,EAAfD,GAAgCxP,EAAW9C,SAAS,oBAEhgtB,SAASka,SAAuE,EAA3Dpa,EAAE,kDAAkDQ,SAAUX,QAAQC,IAAI,cAAcE,EAAE,oBAAoBqa,WAAW,WAAW,IAAI7G,EAAMxT,EAAEiD,MAAMoP,OAAO,MAAMiI,EAAY9G,EAAMrQ,KAAK,sBAAsBoX,EAAUva,EAAE,sCAAsCsa,EAAY,MAAMxV,KAAK,SAAS0V,EAAcxa,EAAE,sCAAsCsa,EAAY,MAAMG,KAAK,SAAS,IAAGjH,EAAM5Q,SAAS,qBAAiS,OAArQ5C,EAAE,kBAAkBC,YAAY,qBAAqBuT,EAAMtT,SAAS,qBAAqBsa,EAActa,SAAS,qBAAqBqa,EAAUra,SAAS,0BAAqBF,EAAE,sCAAsCsa,EAAY,MAAMpa,SAAS,wBAE3qB,SAASwa,OAAO,IAAIC,GAAM,EAAMC,MAAMF,KAAK,CAACG,MAAM,CAAC,CAACC,UAAU,OAAOC,WAAW,WAA0Blb,QAAQC,IAAI,gCAAgC6C,UAAUpD,SAAS4L,QAAQ5L,SAAS6a,UAAW,CAACU,UAAU,UAAUC,WAAW,WAA0Blb,QAAQC,IAAI,mCAAmC+C,eAAeF,YAAa,CAACmY,UAAU,cAAcC,WAAW,WAA0Blb,QAAQC,IAAI,uCAAuC+C,eAAeF,UAAUpD,SAAS4L,UAAW,CAAC2P,UAAU,cAAcC,WAAW,WAA0Blb,QAAQC,IAAI,uCAAuC6C,UAAUpD,SAAS6a,QAAQ7a,SAAS4N,QAAQ5N,SAAS4L,UAAW,CAAC2P,UAAU,aAAaC,WAAW,WAA0Blb,QAAQC,IAAI,sCAAsC+C,eAAeF,UAAUpD,SAAS4L,aAAcyP,MAAMI,MAAMC,YAAY,SAASrW,GAAM/E,QAAQC,IAAI,eAAeob,oBAAmB,EAA4CP,GAApC3a,EAAE,QAAQ4C,SAAS,gBAAqFuY,QAAnCnb,EAAE,QAAQ4C,SAAS,iBAAiDgY,MAAMI,MAAMI,WAAW,SAASxW,GAAM/E,QAAQC,IAAI,cAAcE,EAAE,cAAcqC,QAAQ,CAACC,UAAUtC,EAAE,QAAQkC,SAASC,KAAK,IAAI,IAAIkZ,EAASzW,EAAKE,KAAKwW,KAASC,EAASF,EAAS9J,QAAQ,uBAAuB,eAAe8J,GAAcG,EAAYxb,EAAEub,GAAUlX,OAAO,WAAWlB,KAAK,SAASnD,EAAE,QAAQmD,KAAK,QAAQqY,GAAgB5W,EAAKE,KAAKC,IAAIC,OAA0ML,YAAYC,EAAhM,qBAAkND,YAAYC,EAA9L,qBAAgND,YAAYC,EAApL,yBAA8MD,YAAYC,EAAhL,uBAAwMD,YAAYC,EAA1K,0BAA+M,GAAPuW,MAAanb,EAAE,QAAQE,SAAS,eAAqBF,EAAE,QAAQC,YAAY,eAA0B,GAAP0a,GAAa9a,QAAQC,IAAI,eAAeE,EAAE,QAAQE,SAAS,YAAYF,EAAE,QAAQC,YAAY,kBAAsBD,EAAE,QAAQE,SAAS,gBAAgBF,EAAE,QAAQC,YAAY,aAAoC,GAApBib,oBAA0Brb,QAAQC,IAAI,qCAAqCE,EAAE,QAAQE,SAAS,kBAAkBF,EAAE,QAAQE,SAAS,kBAAkBF,EAAE,QAAQC,YAAY,kBAAuBJ,QAAQC,IAAI,+BAAgCsG,sBAAsBvC,iBAAiBrB,gBAEjyE,SAASiZ,WAAW5b,QAAQC,IAAI,YAAmC,GAApBob,oBAA2Brb,QAAQC,IAAI,iCAAiCE,EAAE,cAAcuC,IAAI,UAAU,GAAGgD,OAAOL,eAAelF,EAAE,QAAQC,YAAY,gBAAgBD,EAAE,QAAQE,SAAS,kBAAkBgb,oBAAmB,IAAWrb,QAAQC,IAAI,gCAAgCE,EAAE,cAAcuC,IAAI,UAAU,GAAGgD,OAAOvF,EAAE,QAAQC,YAAY,iBAEjY,SAASyb,SAAS,SAASC,IAAe9b,QAAQC,IAAI,wDAA2DE,EAAE,oBAAoBQ,SAAQX,QAAQC,IAAI,2BAA2BE,EAAE,oBAAoBgG,SAAS,CAAC9D,OAAS,EAAE0Z,UAAY,EAAEjE,QAAU,CAACkE,QAAU,WAAWC,OAAS,SAASC,SAAW,WAAWC,OAAS,UAAUC,MAAM,WAAiBpc,QAAQC,IAAI,2BAAsDyB,iBAAR,UAA2C2a,QAAQ,WAAgDrc,QAAQC,IAAI,6BAA6ByB,iBAAnD,eAA0yC,GAA4B,EAAzBvB,EAAE,gBAAgBQ,OAAwY,OAA9XX,QAAQC,IAAI,mBAAmD,EAA7BE,EAAE,oBAAoBQ,QAAUR,EAAE,oBAAoBqa,WAAW,WAAiD,GAAtCxa,QAAQC,IAAI,2BAA6BE,EAAE,QAAQ4C,SAAS,UAAyE,OAAxD/C,QAAQC,IAAI,8BAAyBqG,qBAAgDnG,EAAE,gBAAsB4D,MAAM,WAA/8B/D,QAAQC,IAAI,SAAaE,EAAE,QAAQ8W,IAAI,YAAa9W,EAAE,QAAQ8W,IAAI,UAAoG9W,EAAE,QAAQ4C,SAAS,WAAW/C,QAAQC,IAAI,gBAAgB6b,IAAe3b,EAAE,QAAQE,SAAS,WAAWF,EAAE,QAAQC,YAAY,YAAuBJ,QAAQC,IAAI,eAAeiG,kBAAkB/F,EAAE,QAAQE,SAAS,UAAUF,EAAE,QAAQC,YAAY,WAA8BD,EAAE,kBAAiC4D,MAAM,WAAW/D,QAAQC,IAAI,mCAAmCE,EAAE,QAAQE,SAAS,WAAWF,EAAE,QAAQC,YAAY,UAAU0b,QAA5gB5V,kBAAkB/F,EAAE,QAAQE,SAAS,UAAUL,QAAQC,IAAI,iBAAk3B6b,IAA5hD9b,QAAQC,IAAI,8BAAyBE,EAAED,QAAQqL,OAAO,WAAW,IAAI+Q,EAAgBnc,EAAEiD,MAAMX,YAAoG,GAAxF8Z,OAAOpc,EAAE,eAAeqc,YAAYD,OAAO9a,SAASgb,QAAQH,EAAgBE,YAAwB,GAATC,QAAW,CAAC,IAAGtc,EAAE,QAAQ4C,SAAS,gBAAqL,OAA5F5C,EAAE,QAAQE,SAAS,qBAAgB6B,WAAW,WAAW/B,EAAE,cAAcsC,UAAU,IAAK,IAAhK,IAAGtC,EAAE,QAAQ4C,SAAS,UAAoC,YAAnBsD,wBAA2I,GAAGoW,QAAQ,IAAMtc,EAAE,QAAQ4C,SAAS,UAAkC,YAAjBqD,mBA/HxlCpG,QAAQC,IAAI,aAqGU,mBAAXyL,QAAyBA,OAAOgR,gBACzCzQ,gBAAgBJ,UAAUH,OAAOgR,eAAiB,WAChD,OAAOtZ,OAIX6I,gBAAgBJ,UAAU5G,KAAO,SAAUsH,GACzC,OAAOnJ,KAAK8J,QAAQ,OAAQX,IAG9BN,gBAAgBJ,UAAU8Q,MAAQ,SAAUpQ,GAC1C,OAAOnJ,KAAK8J,QAAQ,QAASX,IAG/BN,gBAAgBJ,UAAUuB,OAAS,SAAUb,GAC3C,OAAOnJ,KAAK8J,QAAQ,SAAUX,IAahC,IAAIqQ,OAAO,CAAC/B,KAAK,WAAmB7a,QAAQC,IAAI,QAAQuD,UAAUxC,eAAe2B,cAAc5C,cAAc8a,OAAOgB,SAAS7X,iBAAiB4X,aAAclc,SAASkd,OAAO/B","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var $=$||jQuery;var initSubmenuHeight=function initSubmenuHeight(){var doc=document.documentElement;doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight,\"px\"));};var initHeadroomHeight=function initHeadroomHeight(){var headHeight=$(\"#header-nav-area\").height();var doc=document.documentElement;doc.style.setProperty('--headroom-height',headHeight+'px');};var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();initSubmenuHeight();initHeadroomHeight();}function SetSubmenuHeight(headRoomStatus){console.log(\"SetSubmenuHeight\");console.log(\" headRoomStatust\"+headRoomStatus+\"\");var SubmenuHeight=function SubmenuHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight-headHeight,\"px\"));};var headroomHeight=function headroomHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--headroom-height',headHeight+'px');};window.addEventListener('resize',SubmenuHeight);window.addEventListener('resize',headroomHeight);SubmenuHeight();headroomHeight();}function detectAttrChange(){console.log(\"detectAttrChange()\");$(\".wpuf-submit\").on(\"remove\",function(){$(\"body\").addClass('form-submitted');function startScroll(){console.log(\"scroll now\");var wHeight=$(window).height();var eOffset=$('.wpuf-success').offset().top;var eHeight=$('.wpuf-success').height();$('html, body').animate({scrollTop:eOffset-wHeight+eHeight},100);}setTimeout(startScroll,500);function removeSuccess(){$(\".wpuf-success\").css(\"display\",\"none\");}setTimeout(removeSuccess,6000);});}function orientation(){var $=$||jQuery;console.log(\"hello orientation function\");var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){console.log(\"opacity() function\");var $=$||jQuery;console.log(\"removed imagesloaded\");function waitloading(){$(\"body\").addClass('images-loaded');if($(\"body\").hasClass(\"page-template-page-grid\")){console.log(\"grid loader removing\");$(\"body\").addClass('page-content-loaded');}}setTimeout(waitloading,200);}function imageopacity(){console.log(\"images loaded applied here\");var $=$||jQuery;var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){console.log(\"menupositioner\");var $body=$('body'),$positioner=$(\"#positioner\"),$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});if($body.hasClass('home')){console.log(\"is body\");activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else if($body.hasClass('parent-pageid-101')||$body.hasClass('parent-pageid-104')){console.log(\"is parent of about\");var $activemenuitem=$menu.children().filter(\".about-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else if($body.hasClass('single-news')){console.log(\"is single news - apply active to the parent\");var $activemenuitem=$menu.children().filter(\".news-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else{activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}}function menuClasses(data,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function topAnimation(){setTimeout(function(){$('body').removeClass('animation-fix');if($('body').data('move-to')){var addattr=$('body').data('move-to');$('html, body').animate({scrollTop:$(\"#\"+addattr+\"\").offset().top+1},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});$('body').removeAttr('data-move-to');});}else{$('html, body').animate({scrollTop:$(\"#main\").offset().top+0},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});});}},200);}function fade(){var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}function removeCommentBubble(){if($('#wpd-bubble-wrapper').length){$('#wpd-bubble-wrapper').remove();}}function hoverDiv($thisitem){$thisitem=$thisitem;var hoverloop;var checkhoverDiv=function checkhoverDiv($thisitem){var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});},100);};window.addEventListener('resize',function(){if($('body').hasClass('dev-layout-grid-on')){console.log(\"resizing for hover div - but grid now active\");return;}else{console.log(\"resizing for hover div\");$thisitem=$('.dev-layout-grid-toggle');checkhoverDiv=null;clearInterval(hoverloop);var checkhoverDiv=function checkhoverDiv($thisitem){console.log(\"check hover div after resize\");var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});console.log(\"interval in resize\");},100);};checkhoverDiv($thisitem);}});$(\".dev-layout-grid-toggle\").click(function(){clearInterval(hoverloop);});checkhoverDiv($thisitem);}function succesScroll(){if($(\".wpuf-success\").length){console.log(\"succes avaijlabve\");}}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function introbanner($block){console.log(\"images loaded applied here\");var $thisbannerblock=$block.find(\"img\");$thisbannerblock.each(function(){console.log(\"each 'intro banner block image '\");var $thisbannerimg=$(this);$thisbannerimg.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisbannerimg.attr('src'),newSrc=$thisbannerimg.attr('data-src');$thisbannerimg.attr('src',newSrc);$thisbannerimg.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:true,percentPosition:false,freeScroll:true,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nconsole.log('blocks.js');function blocks(){if($('.intro-banner-block').length>0){$('.intro-banner-block').each(function(){console.log(\"each .intro-banner-block\");var $thisblock=$(this);introbanner($thisblock);});}if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nfunction _AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof _AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen.return !== \"function\") {\n    this.return = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  _AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\n_AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\n_AsyncGenerator.prototype.throw = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\n_AsyncGenerator.prototype.return = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nfunction init$1(){var mediaImage,$imagethumb=$('.acf-image-edit'),newitemid,submissionname,$startbutton=$('.dev-layout-grid-toggle');Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function onSubmission(){detectAttrChange();succesScroll();}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");setTimeout(function(){if($('#canvas-wrap').has('canvas').length){console.log(\"delete exisint canvas\");$('#canvas-wrap').find('canvas').remove();}if($('#export-image-wrap img').length){console.log(\"delete existing image\");$('#export-image-wrap').find('img').remove();}var thescale=1/window.innerWidth*1000;html2canvas(document.querySelector(\".grid-layer\"),{scale:thescale,scrollY:window.pageYOffset*-1}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);$('body').addClass(\"submission-previewed\");$('.export-options').removeClass(\"grid-md-9\").addClass(\"grid-md-6\");$('body').removeClass(\"capturing-image\");$('body').removeClass(\"update-available\");});},1);}function initiatepackery($thisgrid){var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){console.log(\"checkPackery()\");var breakpointName=getComputedStyle(document.body,':after').content,checkbreakpointName=breakpointName.replace(/\"([^\"]+(?=\"))\"/g,'$1'),widescreenbreakpointName=\"widescreen\",defaultbreakpointName=\"default\";console.log(\"breakpointName: \"+breakpointName+\"\");console.log(\"checkbreakpointName: \"+checkbreakpointName+\"\");console.log(\"widescreenbreakpointName: \"+widescreenbreakpointName+\"\");console.log(\"isPackeryInit: \"+isPackeryInit+\"\");if(checkbreakpointName===widescreenbreakpointName&&!isPackeryInit){console.log(\"init packery if widescreen & not already init\");$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$thisitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){$newlastitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');}else{var storedcoordinates=localStorage.getItem('coordinates');if(storedcoordinates==null){var storedcoordinates=initPositions;}$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned - logged in'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}else{console.log(\"not logged in\");$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"dragItemPositioned - not logged in\");$grid.packery('layout').trigger('layoutComplete');var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}if($('body').hasClass(\"is-touch\")){console.log(\" TO DO ensure to have touch screen message enabled\");}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}setTimeout(function(){$grid.packery('layout').trigger('layoutComplete');},100);}else if(breakpointName===defaultbreakpointName&&isPackeryInit){console.log(\"disable packery if default and already intialized\");$grid.packery('destroy');isPackeryInit=false;console.log(\"Hello breakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{console.log(\"else - but doesnt do anything\");}}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}$('input[name=\"submission_name\"]').on('change',function(){submissionname=$('input[name=\"submission_name\"]').val();var posttitle=submissionname;$('input[name=\"post_title\"]').val(\"\"+posttitle+\"\");console.log(\"submissionname =\"+submissionname+\"\");console.log(\"posttitle =\"+posttitle+\"\");});$(\"#load-image\").on('click',function(){console.log(\"load-image click\");captureCanvas();});$(\"#download-image\").on('click',function(){var imgageData=getCanvas.toDataURL(\"image/png\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"\"+submissionname+\"'s Freeling Street.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');$(\"#size-wrap\").removeClass('grid-container');}else{$('body').addClass('dev-layout-grid-on');$(\"#size-wrap\").addClass('grid-container');$('html, body').animate({scrollTop:$('.grid-layer').offset().top-0},'slow');}});function initgriditems(){function isLocalStorageNameSupported(){if((typeof localStorage===\"undefined\"?\"undefined\":_typeof(localStorage))==='object'){try{localStorage.setItem('localStorage',1);localStorage.removeItem('localStorage');}catch(e){Storage.prototype._setItem=Storage.prototype.setItem;Storage.prototype.setItem=function(){};alert('Your web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.');}}}isLocalStorageNameSupported();$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;}else{var gridContent=LZString.decompress(localStorage.getItem('gridContent'));$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);$(\"#clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');location.reload();});}}});}initgriditems();hoverDiv($startbutton);onSubmission();}function canvasChange(){console.log(\"canvasChange()\");if($(\"body\").hasClass(\"submission-previewed\")){$(\"body\").addClass(\"update-available\");$(\"a#load-image\").text(\"Update Preview Image\");}if(startSaving==true){console.log(\"starSaving Function - this should only happens\");startSaving=false;setInterval(function(){var $cleangrid=$(\"#tester-grid-id\");console.log(\"clean grid function - i.e storing data\");cleanGridContent($cleangrid);},30000);}}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");$('body').removeClass(\"edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$('body').addClass(\"edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){console.log(\"click; rotate clicking\");var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('.grid-item-options-toggle-rotate .rotate').css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('input.input-rotate').val(thisnewrotatevalue);canvasChange();var $cleangrid=$(\"#tester-grid-id\");});$inputfields.on('input',function(){console.log(\"$inputfields changed\");var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}function updateImageObject($thisitem,imagetype){var zIndexClass=$thisitem.attr('class').split(' ');for(var i=0;i<zIndexClass.length;i++){if(zIndexClass[i].indexOf('item-z-index')!=-1){$thisitem.removeClass(zIndexClass[i]);}}if(imagetype=='tree'){$thisitem.attr(\"data-item-z-index\",\"2\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"2\");$thisitem.addClass(\"item-z-index-2\");}else if(imagetype=='normal'){$thisitem.attr(\"data-item-z-index\",\"1\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"1\");$thisitem.addClass(\"item-z-index-1\");}}function cleanGridContent($cleangrid){console.log(\"cleanGridContent($cleangrid)\");var $cleangridcontent=$cleangrid.clone();$cleangridcontent.find('.ui-selectmenu-button').remove();$cleangridcontent.find('.ui-selectmenu-menu.ui-front').remove();var gridContent=$cleangridcontent.prop('outerHTML');localStorage.setItem(\"gridContent\",LZString.compress(gridContent));}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}\n\nfunction init$2(){if($(\"body.page-id-101.page-parent .project-overview\").length>0){console.log(\"about page\");$('ul.sections li a').mouseenter(function(){var $this=$(this).parent(\"li\"),thissection=$this.attr(\"data-section-title\"),$nextline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').next(\".line\"),$previousline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').prev(\".line\");if($this.hasClass('section-is-active')){}else{$('ul.sections li').removeClass('section-is-active');$this.addClass('section-is-active');$previousline.addClass('section-is-active');$nextline.addClass('section-is-active');$('ul.sections li[data-section-title=\"'+thissection+'\"]').addClass('section-is-active');return;}return;});}}\n\nfunction init(){var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);domReady(init$2);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$2);domReady(init$1);domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");imageopacity();opacity();domReady(blocks);}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);if(data.next.url.path){var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}removeCommentBubble();menuPositioner();orientation();});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();topAnimation();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$3(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"},onPin:function onPin(){console.log(\"headroom onPin function\");var headRoomStatus=\"onPin\";SetSubmenuHeight(headRoomStatus);},onUnpin:function onUnpin(){var headRoomStatus=\"onUnpin\";console.log(\"headroom onUnPin function\");SetSubmenuHeight(headRoomStatus);}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$3();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}