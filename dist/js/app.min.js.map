{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","detectAttrChange","on","setTimeout","css","orientation","winwidth","width","height","opacity","imagesLoaded","imageopacity","find","each","$thisimage","this","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","remove","click","hasClass","menuPositioner","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","activemenuitemnumber","applymarginleft","animate","marginLeft","menuClasses","data","target","next","url","path","closest","topAnimation","addattr","scrollTop","offset","top","$thisitem","off","removeAttr","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","removeCommentBubble","images","$block","$thisimageblock","slideshow","getScript","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","init$1","Packery","prototype","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","e","preventDefault","method","serializeArray","modal","tinyMCE","push","name","value","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","submissionname","verifyItemsRepeater","removeRow","hide","show","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","change","event","ui","thisimage","imagetype","updateImageObject","canvasChange","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","replace","$newitem","draggie","Draggabilly","imageEdit","jsonpositions","stringify","val","localStorage","setItem","gridContent","innerHTML","$closest","resize","clearTimeout","posttitle","has","html2canvas","scale","scrollY","pageYOffset","then","canvas","img","src","toDataURL","getCanvas","imgageData","newData","removeItem","empty","append","text","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","type","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","zIndexClass","indexOf","thiswidth","thisheight","thiswidthtoheightratio","undefined","thisimagewidthtoheightratio","init","touch","barba","views","namespace","afterEnter","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","siteLoad","init$2","initheadroom","tolerance","initial","pinned","unpinned","frozen","mouseenter","windowScrolltop","$intro","introheight","reached","inpapp"],"mappings":"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","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();}function detectAttrChange(){console.log(\"detectAttrChange()\");$(\".wpuf-submit\").on(\"remove\",function(){$(\"body\").addClass('form-submitted');function removeSuccess(){$(\".wpuf-success\").css(\"display\",\"none\");}setTimeout(removeSuccess,6000);});}function orientation(){var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){$(\"body\").imagesLoaded(function(){function waitloading(){$(\"body\").addClass('images-loaded');}setTimeout(waitloading,200);});}function imageopacity(){var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){var $positioner=$(\"#positioner\");$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}function menuClasses(data,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function topAnimation(){setTimeout(function(){$('body').removeClass('animation-fix');if($('body').data('move-to')){var addattr=$('body').data('move-to');$('html, body').animate({scrollTop:$(\"#\"+addattr+\"\").offset().top+1},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});$('body').removeAttr('data-move-to');});}else{$('html, body').animate({scrollTop:$(\"#main\").offset().top+0},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});});}},200);}function fade(){var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}function removeCommentBubble(){if($('#wpd-bubble-wrapper').length){$('#wpd-bubble-wrapper').remove();}}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,freeScroll:false,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nfunction blocks(){if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction init$1(){Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var mediaImage,$imagethumb=$('.acf-image-edit');var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function onSubmission(){detectAttrChange();}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");setTimeout(function(){if($('#canvas-wrap').has('canvas').length){console.log(\"delete exisint canvas\");$('#canvas-wrap').find('canvas').remove();}if($('#export-image-wrap img').length){console.log(\"delete existing image\");$('#export-image-wrap').find('img').remove();}html2canvas(document.querySelector(\".grid-layer\"),{scale:2,scrollY:window.pageYOffset*-1}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);$('body').addClass(\"submission-previewed\");$('.export-options').removeClass(\"grid-md-9\").addClass(\"grid-md-6\");$('body').removeClass(\"capturing-image\");$('body').removeClass(\"update-available\");});},1);}function initiatepackery($thisgrid){console.log(\"initiate $thisgrid\"+$thisgrid+\"\");var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){var breakpointName=getComputedStyle(document.body,':after').content;if(breakpointName==='\"widescreen\"'&&!isPackeryInit){$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){console.log(\"each grid item - iniitally\");var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){console.log(\" $griditems. each base64_data\");$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$thisitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');console.log(\"$thisUiId\"+$thisUiId+\"\");$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$newlastitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);localStorage.setItem(\"coordinates\",jsonpositions);$coordinates.val(jsonpositions);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);console.log(\"gridContent\"+gridContent+\"\");verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');console.log(\"storedcoordinates\"+initPositions+\"\");}else{var storedcoordinates=localStorage.getItem('coordinates');$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);canvasChange();});}else{console.log(\"not logged in\");$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);canvasChange();});}if($('body').hasClass(\"is-touch\")){console.log(\"ensure to have touch screen message enabled\");}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}}else if(breakpointName==='\"default\"'&&isPackeryInit){$grid.packery('destroy');isPackeryInit=false;console.log(\"Hellow vbreakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{}$(window).resize(function(){console.log(\"resize(function()\");});setTimeout(function(){console.log(\"setTimeout(function)\");$grid.packery('layout').trigger('layoutComplete');},100);}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}var submissionname;$('input[name=\"submission_name\"]').on('change',function(){submissionname=$('input[name=\"submission_name\"]').val();var posttitle=submissionname;$('input[name=\"post_title\"]').val(\"\"+posttitle+\"\");console.log(\"submissionname =\"+submissionname+\"\");console.log(\"posttitle =\"+posttitle+\"\");});$(\"#load-image\").on('click',function(){console.log(\"load-image click\");captureCanvas();});$(\"#download-image\").on('click',function(){var imgageData=getCanvas.toDataURL(\"image/png\");console.log(\"submissionname on download =\"+submissionname+\"\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"\"+submissionname+\"'s Freeling Street.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');}else{$('body').addClass('dev-layout-grid-on');console.log(\"scrolling to the top of grid\");$('html, body').animate({scrollTop:$('.grid-layer').offset().top-0},'slow');}});$(\".clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');});function initgriditems(){$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);console.log(\"gridContent\"+gridContent+\"\");}else{console.log(\"HAS local storage gridContent\"+gridContent+\"\");var gridContent=localStorage.getItem(\"gridContent\");$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}}});}initgriditems();onSubmission();}function canvasChange(){console.log(\"canvasChange()\");if($(\"body\").hasClass(\"submission-previewed\")){$(\"body\").addClass(\"update-available\");$(\"a#load-image\").text(\"Update Preview Image\");}}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('.grid-item-options-toggle-rotate .rotate').css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('input.input-rotate').val(thisnewrotatevalue);canvasChange();});$inputfields.on('input',function(){var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}function updateImageObject($thisitem,imagetype){var zIndexClass=$thisitem.attr('class').split(' ');for(var i=0;i<zIndexClass.length;i++){if(zIndexClass[i].indexOf('item-z-index')!=-1){$thisitem.removeClass(zIndexClass[i]);}}if(imagetype=='tree'){$thisitem.attr(\"data-item-z-index\",\"2\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"2\");$thisitem.addClass(\"item-z-index-2\");}else if(imagetype=='normal'){$thisitem.attr(\"data-item-z-index\",\"1\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"1\");$thisitem.addClass(\"item-z-index-1\");}}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}\n\nfunction init(){var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$1);domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");opacity();}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);if(data.next.url.path){var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}removeCommentBubble();menuPositioner();orientation();});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();topAnimation();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$2(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$2();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}