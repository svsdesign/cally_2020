{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","orientation","winwidth","width","height","opacity","imagesLoaded","setTimeout","imageopacity","find","each","$thisimage","this","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","css","remove","click","hasClass","menuPositioner","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","activemenuitemnumber","applymarginleft","animate","marginLeft","menuClasses","data","target","next","url","path","closest","topAnimation","addattr","scrollTop","offset","top","$thisitem","on","off","removeAttr","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","images","$block","$thisimageblock","slideshow","getScript","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","init$1","Packery","prototype","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","e","preventDefault","method","serializeArray","modal","tinyMCE","push","name","value","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","verifyItemsRepeater","removeRow","hide","show","captureCanvas","scrollTo","html2canvas","scale","then","canvas","img","src","toDataURL","getCanvas","has","val","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","maxHeight","change","event","ui","thisimage","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","replace","$newitem","selectmenu","draggie","Draggabilly","imageEdit","jsonpositions","stringify","localStorage","setItem","gridContent","innerHTML","$closest","resize","clearTimeout","newData","removeItem","empty","append","thiswidth","thisheight","thiswidthtoheightratio","undefined","thisimagewidthtoheightratio","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","type","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","init","loadjscssfile","filename","filetype","existingScript","existingCSS","fileref","touch","barba","views","namespace","afterEnter","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","beforeEnter","_ref","current","container","baseURL","location","hostname","wpFormWrapper","querySelectorAll","wpFormVariables","forEach","parentElement","script","scriptCode","newScript","siteLoad","init$2","initheadroom","tolerance","initial","pinned","unpinned","frozen","mouseenter","windowScrolltop","$intro","introheight","reached","inpapp"],"mappings":"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","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();}function orientation(){console.log(\"hello orientation function\");var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){$(\"body\").imagesLoaded(function(){console.log(\"Images have loaded\");function waitloading(){$(\"body\").addClass('images-loaded');}setTimeout(waitloading,200);});}function imageopacity(){console.log(\"images loaded applied here\");var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){console.log(\"menupositioner\");var $positioner=$(\"#positioner\");$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}function menuClasses(data,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function topAnimation(){console.log(\"function topAnimation()\");setTimeout(function(){console.log(\"hello\");console.log(\"setTimeout(function()\");$('body').removeClass('animation-fix');if($('body').data('move-to')){var addattr=$('body').data('move-to');$('html, body').animate({scrollTop:$(\"#\"+addattr+\"\").offset().top+1},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});$('body').removeAttr('data-move-to');});}else{console.log(\"about to animate?\");$('html, body').animate({scrollTop:$(\"#main\").offset().top+0},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});});}},200);}function fade(){console.log(\"function fade()\");var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,freeScroll:false,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nfunction blocks(){if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction init$1(){console.log(\"layout-grid/index.js\");Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),btn=_this.find('button[type=\"submit\"]'),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var mediaImage,$imagethumb=$('.acf-image-edit');var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");window.scrollTo(0,0);html2canvas(document.querySelector(\"#grid-wraps\"),{scale:4}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;if($('#canvas-wrap').has('canvas').length){$('#canvas-wrap').find('canvas').remove();$('#export-image-wrap').find('img').remove();}document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);});$('body').removeClass(\"capturing-image\");}function initiatepackery($thisgrid){console.log(\"initiate $thisgrid\"+$thisgrid+\"\");var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){var breakpointName=getComputedStyle(document.body,':after').content;if(breakpointName==='\"widescreen\"'&&!isPackeryInit){$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){console.log(\"each grid item - iniitally\");var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){console.log(\" $griditems. each base64_data\");$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,maxHeight:300,style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");console.log(\"thisimage\"+thisimage+\"\");$originalimage.attr(\"src\",thisimage);},select:function select(event,ui){}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');$thisUi.css(\"background\",\"yellow\");var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');console.log(\"$thisUiId\"+$thisUiId+\"\");$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,change:function change(event,ui){console.log(\"change\"+ui+\"\");$(ui.item.element).css(\"background\",\"red\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");console.log(\"thisimage\"+thisimage+\"\");$originalimage.attr(\"src\",thisimage);},select:function select(event,ui){$(ui).selectmenu(\"close\");console.log(\"close\");}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);localStorage.setItem(\"coordinates\",jsonpositions);$coordinates.val(jsonpositions);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);console.log(\"gridContent\"+gridContent+\"\");verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');console.log(\"storedcoordinates\"+initPositions+\"\");}else{console.log(\"not logged in hhere \");var storedcoordinates=localStorage.getItem('coordinates');console.log(\"storedcoordinates\"+storedcoordinates+\"\");$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);captureCanvas();});}else{console.log(\"not logged in\");$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);captureCanvas();});}if($('body').hasClass(\"is-touch\")){}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}}else if(breakpointName==='\"default\"'&&isPackeryInit){$grid.packery('destroy');isPackeryInit=false;console.log(\"Hellow vbreakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{}$(window).resize(function(){console.log(\"resize(function()\");});setTimeout(function(){console.log(\"setTimeout(function)\");$grid.packery('layout').trigger('layoutComplete');},100);}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}$(\"#download-image\").on('click',function(){console.log(\"hello?!\");var imgageData=getCanvas.toDataURL(\"image/png\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"your_pic_name.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');}else{$('body').addClass('dev-layout-grid-on');}});$(\".clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');});function initgriditems(){$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);console.log(\"gridContent\"+gridContent+\"\");}else{console.log(\"HAS local storage gridContent\"+gridContent+\"\");var gridContent=localStorage.getItem(\"gridContent\");$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}}});}initgriditems();}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){console.log(\"click; rotate clicking\");var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());console.log(\"thisrotatevalue\"+thisrotatevalue+\"\");if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");});$inputfields.on('input',function(){var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}\n\nfunction init(){function loadjscssfile(filename,filetype){if(filetype==\"js\"){var existingScript=document.querySelector('script[src=\"${filename}\"]');if(existingScript){existingScript.remove();}var fileref=document.createElement(\"script\");fileref.setAttribute(\"type\",\"text/javascript\");fileref.setAttribute(\"src\",filename);}else if(filetype==\"css\"){var existingCSS=document.querySelector(\"link[href='\".concat(filename,\"']\"));if(existingCSS){existingCSS.remove();}var fileref=document.createElement(\"link\");fileref.setAttribute(\"rel\",\"stylesheet\");fileref.setAttribute(\"type\",\"text/css\");fileref.setAttribute(\"href\",filename);}if(typeof fileref!=\"undefined\")document.getElementsByTagName(\"head\")[0].appendChild(fileref);}var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$1);domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");opacity();}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);if(data.next.url.path){var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}menuPositioner();orientation();console.log(\"afterleave - reload script?\");});barba.hooks.beforeEnter(function(_ref){var current=_ref.current,next=_ref.next;if(current.container){var nextHtml=next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,\"$1notbody$2>\",nextHtml);var bodyClasses=$(response).filter(\"notbody\").attr(\"class\");$(\"body\").attr(\"class\",bodyClasses);}console.log(\"beforeenter: reload scripts\");var baseURL=window.location.hostname;console.log(\"baseURL\"+baseURL+\"\");var wpFormJSform=\"/cally-2020/wp-content/plugins/wp-user-frontend/assets/js/frontend-form.min.js\";var wpFormJSsubscriptions=\"/cally-2020/wp-content/plugins/wp-user-frontend/assets/js/subscriptions.js\";var wpFormWrapper=next.container.querySelectorAll(\".wpuf-form-add\");if(wpFormWrapper){var wpFormVariablesScript=document.createElement(\"script\");wpFormVariablesScript.innerHTML=wpFormVariables;loadjscssfile(wpFormJSform,\"js\");loadjscssfile(wpFormJSsubscriptions,\"js\");wpFormWrapper.forEach(function(element){var parent=element.parentElement;var scripts=parent.querySelectorAll(\"script\");scripts.forEach(function(script){var scriptCode=script.innerHTML;var newScript=document.createElement(\"script\");script.remove();newScript.innerHTML=scriptCode;parent.appendChild(newScript);});});}});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();topAnimation();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$2(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$2();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}