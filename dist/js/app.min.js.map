{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","headHeight","height","SetSubmenuHeight","headRoomStatus","SubmenuHeight","doc","outerHeight","headroomHeight","detectAttrChange","on","setTimeout","css","orientation","winwidth","width","opacity","imagesLoaded","hasClass","imageopacity","find","each","$thisimage","this","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","remove","click","menuPositioner","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","activemenuitemnumber","applymarginleft","animate","marginLeft","menuClasses","data","target","next","url","path","closest","topAnimation","addattr","scrollTop","offset","top","$thisitem","off","removeAttr","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","removeCommentBubble","hoverDiv","hovermouseX","hovermouseY","hoverlimitX","hoverlimitY","mousemove","e","hoveroffset","min","pageX","left","pageY","hoverfollower","hoverxp","hoveryp","setInterval","images","$block","$thisimageblock","introbanner","$thisbannerimg","slideshow","getScript","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","init$1","submissionname","$startbutton","Packery","prototype","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","preventDefault","method","serializeArray","modal","tinyMCE","push","name","value","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","verifyItemsRepeater","removeRow","hide","show","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","change","event","ui","thisimage","imagetype","updateImageObject","canvasChange","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","replace","$newitem","draggie","Draggabilly","imageEdit","jsonpositions","stringify","val","localStorage","setItem","gridContent","innerHTML","$closest","clearTimeout","posttitle","has","innerWidth","thescale","html2canvas","scale","scrollY","pageYOffset","then","canvas","img","src","toDataURL","getCanvas","imgageData","newData","empty","append","removeItem","location","reload","text","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","type","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","zIndexClass","indexOf","thiswidth","thisheight","thiswidthtoheightratio","undefined","thisimagewidthtoheightratio","init$2","mouseenter","thissection","$nextline","$previousline","prev","init","touch","barba","views","namespace","afterEnter","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","siteLoad","init$3","initheadroom","tolerance","initial","pinned","unpinned","frozen","onPin","onUnpin","windowScrolltop","$intro","introheight","reached","inpapp"],"mappings":"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","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var initSubmenuHeight=function initSubmenuHeight(){var doc=document.documentElement;doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight,\"px\"));};var initHeadroomHeight=function initHeadroomHeight(){var headHeight=$(\"#header-nav-area\").height();var doc=document.documentElement;doc.style.setProperty('--headroom-height',headHeight+'px');};var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();initSubmenuHeight();initHeadroomHeight();}function SetSubmenuHeight(headRoomStatus){console.log(\"SetSubmenuHeight\");console.log(\" headRoomStatust\"+headRoomStatus+\"\");var SubmenuHeight=function SubmenuHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight-headHeight,\"px\"));};var headroomHeight=function headroomHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--headroom-height',headHeight+'px');};window.addEventListener('resize',SubmenuHeight);window.addEventListener('resize',headroomHeight);SubmenuHeight();headroomHeight();}function detectAttrChange(){console.log(\"detectAttrChange()\");$(\".wpuf-submit\").on(\"remove\",function(){$(\"body\").addClass('form-submitted');function removeSuccess(){$(\".wpuf-success\").css(\"display\",\"none\");}setTimeout(removeSuccess,6000);});}function orientation(){var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){$(\"body\").imagesLoaded(function(){console.log(\"Images have loaded in opacity() in helpers.js\");function waitloading(){$(\"body\").addClass('images-loaded');if($(\"body\").hasClass(\"page-template-page-grid\")){console.log(\"grid loader removing\");$(\"body\").addClass('page-content-loaded');}}setTimeout(waitloading,200);});}function imageopacity(){var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){var $positioner=$(\"#positioner\");$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}function menuClasses(data,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function topAnimation(){setTimeout(function(){$('body').removeClass('animation-fix');if($('body').data('move-to')){var addattr=$('body').data('move-to');$('html, body').animate({scrollTop:$(\"#\"+addattr+\"\").offset().top+1},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});$('body').removeAttr('data-move-to');});}else{$('html, body').animate({scrollTop:$(\"#main\").offset().top+0},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});});}},200);}function fade(){var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}function removeCommentBubble(){if($('#wpd-bubble-wrapper').length){$('#wpd-bubble-wrapper').remove();}}function hoverDiv($thisitem){console.log(\"hoverDiv($thisitem)\");var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;console.log(\"hoverDiv($thisitem)\");}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;var hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});},10);}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function introbanner($block){console.log(\"images loaded applied here\");var $thisbannerblock=$block.find(\"img\");$thisbannerblock.each(function(){console.log(\"each 'intro banner block image '\");var $thisbannerimg=$(this);$thisbannerimg.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisbannerimg.attr('src'),newSrc=$thisbannerimg.attr('data-src');$thisbannerimg.attr('src',newSrc);$thisbannerimg.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,freeScroll:false,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nfunction blocks(){if($('.intro-banner-block').length>0){$('.intro-banner-block').each(function(){console.log(\"each .intro-banner-block\");var $thisblock=$(this);introbanner($thisblock);});}if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction init$1(){var mediaImage,$imagethumb=$('.acf-image-edit'),newitemid,submissionname,$startbutton=$('.dev-layout-grid-toggle');Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){console.log(\"hello here\"+positions+\"\");if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function onSubmission(){detectAttrChange();}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");setTimeout(function(){if($('#canvas-wrap').has('canvas').length){console.log(\"delete exisint canvas\");$('#canvas-wrap').find('canvas').remove();}if($('#export-image-wrap img').length){console.log(\"delete existing image\");$('#export-image-wrap').find('img').remove();}console.log(\"Window.innerWidth = \"+window.innerWidth+\"\");var thescale=1/window.innerWidth*1000;console.log(\"thescale = \"+thescale+\"\");html2canvas(document.querySelector(\".grid-layer\"),{scale:thescale,scrollY:window.pageYOffset*-1}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);$('body').addClass(\"submission-previewed\");$('.export-options').removeClass(\"grid-md-9\").addClass(\"grid-md-6\");$('body').removeClass(\"capturing-image\");$('body').removeClass(\"update-available\");});},1);}function initiatepackery($thisgrid){console.log(\"initiate $thisgrid\"+$thisgrid+\"\");var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){var breakpointName=getComputedStyle(document.body,':after').content;if(breakpointName==='\"widescreen\"'&&!isPackeryInit){$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){console.log(\"each grid item - iniitally\");var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$thisitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){$newlastitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);localStorage.setItem(\"coordinates\",jsonpositions);$coordinates.val(jsonpositions);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);console.log(\"gridContent\"+gridContent+\"\");verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');}else{var storedcoordinates=localStorage.getItem('coordinates');if(storedcoordinates==null){var storedcoordinates=initPositions;console.log(\"initPositins\"+initPositions+\"\");}console.log(\"storedcoordinates - in local storage:\"+storedcoordinates+\"\");$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned - logged in'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}else{console.log(\"not logged in\");$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"dragItemPositioned - not logged in\");console.log(\"positions\"+positions+\"\");$grid.packery('layout').trigger('layoutComplete');var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}if($('body').hasClass(\"is-touch\")){console.log(\"ensure to have touch screen message enabled\");}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}setTimeout(function(){$grid.packery('layout').trigger('layoutComplete');},100);}else if(breakpointName==='\"default\"'&&isPackeryInit){$grid.packery('destroy');isPackeryInit=false;console.log(\"Hello breakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{}}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}$('input[name=\"submission_name\"]').on('change',function(){submissionname=$('input[name=\"submission_name\"]').val();var posttitle=submissionname;$('input[name=\"post_title\"]').val(\"\"+posttitle+\"\");console.log(\"submissionname =\"+submissionname+\"\");console.log(\"posttitle =\"+posttitle+\"\");});$(\"#load-image\").on('click',function(){console.log(\"load-image click\");captureCanvas();});$(\"#download-image\").on('click',function(){var imgageData=getCanvas.toDataURL(\"image/png\");console.log(\"submissionname on download =\"+submissionname+\"\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"\"+submissionname+\"'s Freeling Street.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');}else{$('body').addClass('dev-layout-grid-on');console.log(\"scrolling to the top of grid\");$('html, body').animate({scrollTop:$('.grid-layer').offset().top-0},'slow');}});function initgriditems(){$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var OgGridContent=document.getElementById(\"tester-grid-id\").innerHTML;var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);console.log(\"gridContent\"+gridContent+\"\");}else{var OgGridContent=document.getElementById(\"tester-grid-id\").innerHTML;var gridContent=localStorage.getItem(\"gridContent\");$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);$(\"#tester-grid-id\").find('.ui-selectmenu-button').remove();$(\"#tester-grid-id\").find('.ui-selectmenu-menu.ui-front').remove();verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);$(\"#clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');location.reload();});}}});}initgriditems();hoverDiv($startbutton);onSubmission();}function canvasChange(){console.log(\"canvasChange()\");if($(\"body\").hasClass(\"submission-previewed\")){$(\"body\").addClass(\"update-available\");$(\"a#load-image\").text(\"Update Preview Image\");}}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");$('body').removeClass(\"edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$('body').addClass(\"edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('.grid-item-options-toggle-rotate .rotate').css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('input.input-rotate').val(thisnewrotatevalue);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);canvasChange();});$inputfields.on('input',function(){var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;localStorage.setItem(\"gridContent\",gridContent);}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}function updateImageObject($thisitem,imagetype){var zIndexClass=$thisitem.attr('class').split(' ');for(var i=0;i<zIndexClass.length;i++){if(zIndexClass[i].indexOf('item-z-index')!=-1){$thisitem.removeClass(zIndexClass[i]);}}if(imagetype=='tree'){$thisitem.attr(\"data-item-z-index\",\"2\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"2\");$thisitem.addClass(\"item-z-index-2\");}else if(imagetype=='normal'){$thisitem.attr(\"data-item-z-index\",\"1\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"1\");$thisitem.addClass(\"item-z-index-1\");}}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}\n\nfunction init$2(){console.log(\"overview js functions\");if($(\".project-overview\").length>0){$('ul.sections li a').mouseenter(function(){var $this=$(this).parent(\"li\"),thissection=$this.attr(\"data-section-title\"),$nextline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').next(\".line\"),$previousline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').prev(\".line\");console.log(\"'ul.sections li  hover\");console.log(\"thissections = \"+thissection+\"\");if($this.hasClass('section-is-active')){}else{$('ul.sections li').removeClass('section-is-active');$('ul.sections li').removeClass('page-is-active');$this.addClass('section-is-active');$previousline.addClass('section-is-active');$nextline.addClass('section-is-active');$('ul.sections li[data-section-title=\"'+thissection+'\"]').addClass('section-is-active');return;}return;});}}\n\nfunction init(){var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);domReady(init$2);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$1);domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");imageopacity();opacity();domReady(blocks);}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);if(data.next.url.path){var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}removeCommentBubble();menuPositioner();orientation();});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();topAnimation();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$3(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"},onPin:function onPin(){console.log(\"headroom onPin function\");var headRoomStatus=\"onPin\";SetSubmenuHeight(headRoomStatus);},onUnpin:function onUnpin(){var headRoomStatus=\"onUnpin\";console.log(\"headroom onUnPin function\");SetSubmenuHeight(headRoomStatus);}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$3();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}