{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","console","log","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","headHeight","height","SetSubmenuHeight","headRoomStatus","SubmenuHeight","doc","outerHeight","headroomHeight","detectAttrChange","on","setTimeout","css","orientation","winwidth","width","opacity","imagesLoaded","hasClass","imageopacity","find","each","$thisimage","this","attr","newSrc","devGrid","documentGridHeight","$baselines","pxlineheight","vwlineheight","baselinecount","remove","click","menuPositioner","$body","$positioner","$menu","$menuitems","children","numberofmenuitems","$activemenuitem","filter","positionerwidth","number","index","applymarginleft","animate","marginLeft","menuClasses","data","target","next","url","path","closest","topAnimation","addattr","scrollTop","offset","top","$thisitem","off","removeAttr","fade","animation_height","ratio","Math","round","objectTop","windowBottom","transition","destroyheadroom","headroom","freezeheadroom","unfreezeheadroom","forceheadroompin","removeCommentBubble","hoverDiv","hovermouseX","hovermouseY","hoverlimitX","hoverlimitY","mousemove","e","hoveroffset","min","pageX","left","pageY","hoverfollower","hoverxp","hoveryp","setInterval","checkhoverDiv","images","$block","$thisimageblock","introbanner","$thisbannerimg","slideshow","getScript","textStatus","jqxhr","$thisgallery","flickity","setGallerySize","percentPosition","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","map","gMapsCallback","gMapsLoaded","trigger","loadGoogleMaps","script_tag","createElement","setAttribute","getElementsByTagName","appendChild","bind","google","maps","Map","getElementById","center","lat","lng","zoom","panControl","zoomControl","draggable","scrollwheel","mapTypeControl","scaleControl","streetViewControl","overviewMapControl","styles","stylers","saturation","image","themeurl","Marker","position","optimized","icon","blocks","scroll","_AwaitValue","value","wrapped","_AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","Promise","resolve","then","settle","done","err","type","reject","_invoke","request","return","undefined","init$1","submissionname","$startbutton","Packery","prototype","getShiftPositions","attrName","_this","items","item","element","getAttribute","x","rect","packer","initShiftLayout","positions","JSON","parse","error","layout","_resetLayout","itemPosition","selector","itemElem","querySelector","getItem","shiftLayout","submit","preventDefault","method","serializeArray","modal","tinyMCE","push","name","get","getContent","ajax","beforeSend","xhr","setRequestHeader","WP_settings","nonce","dataType","always","verifyItemsRepeater","removeRow","hide","show","initiatepackery","$thisgrid","$grid","isEditModeActive","threshold","timeout","isPackeryInit","isGridItemsActive","checkPackery","$griditems","$coordinates","initPositions","$addrow","storedcoordinates","breakpointName","getComputedStyle","body","content","checkbreakpointName","replace","widescreenbreakpointName","packery","itemSelector","columnWidth","isHorizontal","initLayout","i","$originalimage","thisimageurl","$thisplaceholder","itemid","$thisUi","$thisUiAppend","parent","$thisUiId","gridImageOrientation","thisimagewidth","thisimageheight","itemEdit","imageRemove","convertImgToDataURLviaCanvas","base64_data","iconselectmenu","appendTo","change","event","ui","thisimage","imagetype","updateImageObject","canvasChange","select","$this","$repeateritems","$closestrepeater","$lastitem","clone","ids","max","apply","insertAfter","$newlastitem","newIndex","$newitem","draggie","Draggabilly","imageEdit","jsonpositions","stringify","val","localStorage","setItem","cleanGridContent","$closest","clearTimeout","posttitle","has","thescale","innerWidth","html2canvas","scale","scrollY","pageYOffset","canvas","img","src","toDataURL","getCanvas","imgageData","newData","localStorageSize","gridContent","innerHTML","LZString","decompress","empty","append","removeItem","location","reload","text","$thisedittoggle","not","$thisrotatetoggle","applyxvalue","applyyvalue","applyscalevalue","$inputfields","$postfield","thisnewrotatevalue","$thisrotate","thisrotatevalue","Number","thisclass","newclass","classes","$thisfield","newvalue","thisfieldtype","applyrotatevalue","split","c","lastIndexOf","join","trim","$thisimagethumb","mediaImage","thisitemid","isFunction","wp","media","open","library","multiple","state","first","toJSON","id","callback","Image","crossOrigin","onload","dataURL","ctx","getContext","fillStyle","fillRect","zIndexClass","indexOf","_xLen","_x","_lsTotal","hasOwnProperty","substr","toFixed","$cleangrid","$cleangridcontent","prop","compress","thiswidth","thisheight","thiswidthtoheightratio","thisimagewidthtoheightratio","init$2","mouseenter","thissection","$nextline","$previousline","prev","init","touch","barba","views","namespace","afterEnter","hooks","beforeLeave","introanimationdone","devon","afterLeave","nextHtml","html","response","bodyClasses","siteLoad","init$3","initheadroom","tolerance","initial","pinned","unpinned","frozen","onPin","onUnpin","windowScrolltop","$intro","introheight","reached","Symbol","asyncIterator","throw","inpapp"],"mappings":"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","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){console.log(\"detectTouch();\");if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var initSubmenuHeight=function initSubmenuHeight(){var doc=document.documentElement;doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight,\"px\"));};var initHeadroomHeight=function initHeadroomHeight(){var headHeight=$(\"#header-nav-area\").height();var doc=document.documentElement;doc.style.setProperty('--headroom-height',headHeight+'px');};var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();initSubmenuHeight();initHeadroomHeight();}function SetSubmenuHeight(headRoomStatus){console.log(\"SetSubmenuHeight\");console.log(\" headRoomStatust\"+headRoomStatus+\"\");var SubmenuHeight=function SubmenuHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--submenu-height',\"\".concat(window.innerHeight-headHeight,\"px\"));};var headroomHeight=function headroomHeight(){var doc=document.documentElement;if(headRoomStatus==\"onPin\"){var headHeight=$(\"#header-nav-area\").outerHeight();}else if(headRoomStatus==\"onUnpin\"){var headHeight=0;}doc.style.setProperty('--headroom-height',headHeight+'px');};window.addEventListener('resize',SubmenuHeight);window.addEventListener('resize',headroomHeight);SubmenuHeight();headroomHeight();}function detectAttrChange(){console.log(\"detectAttrChange()\");$(\".wpuf-submit\").on(\"remove\",function(){$(\"body\").addClass('form-submitted');function removeSuccess(){$(\".wpuf-success\").css(\"display\",\"none\");}setTimeout(removeSuccess,6000);});}function orientation(){var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){$(\"body\").imagesLoaded(function(){console.log(\"Images have loaded in opacity() in helpers.js\");function waitloading(){$(\"body\").addClass('images-loaded');if($(\"body\").hasClass(\"page-template-page-grid\")){console.log(\"grid loader removing\");$(\"body\").addClass('page-content-loaded');}}setTimeout(waitloading,200);});}function imageopacity(){var $thisimageblock=$(\"body\").find(\"img.apply-image-load\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function devGrid(){if($('.dev-grid').length>0){var introHeight=$('#intro-area').height(),documentGridHeight=$('#main.wrapper').height(),$baselines=$(\".dev-base-lines\");pxlineheight='10',vwlineheight='1vw',baselinecount=documentGridHeight/pxlineheight;$baselines.css(\"height\",documentGridHeight);$('.dev-base-lines .base-line').remove();$('.dev-grid-toggle').click(function(){if($('body').hasClass('dev-grid-on')){$('body').removeClass('dev-grid-on');}else{$('body').addClass('dev-grid-on');}});}}function menuPositioner(){console.log(\"menupositioner\");var $body=$('body'),$positioner=$(\"#positioner\"),$menu=$(\"#menu-header-navigation\"),$menuitems=$menu.children(),numberofmenuitems=$menuitems.length,$activemenuitem=$menu.children().filter(\".current-menu-item\"),positionerwidth=100/numberofmenuitems;$menuitems.each(function(){var number=$(this).index()+1;$(this).attr(\"menu-number\",number);});if($body.hasClass('home')){console.log(\"is body\");}else if($body.hasClass('single-news')){console.log(\"is single news\");var $activemenuitem=$menu.children().filter(\".news-link\"),activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}else{activemenuitemnumber=$activemenuitem.attr(\"menu-number\");applymarginleft=activemenuitemnumber*positionerwidth-positionerwidth+\"%\";$positioner.css(\"width\",positionerwidth+\"%\");$positioner.css(\"margin-left\",applymarginleft+\"%\");$positioner.animate({marginLeft:applymarginleft},500);}}function menuClasses(data,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function topAnimation(){setTimeout(function(){$('body').removeClass('animation-fix');if($('body').data('move-to')){var addattr=$('body').data('move-to');$('html, body').animate({scrollTop:$(\"#\"+addattr+\"\").offset().top+1},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});$('body').removeAttr('data-move-to');});}else{$('html, body').animate({scrollTop:$(\"#main\").offset().top+0},600,function(){var $thisitem=$(window);$thisitem.on('scroll.startitem',function(){var windowPos=$(this).scrollTop(),mainScroll=$('#main').offset().top,scrollHeight=windowPos-mainScroll;if(scrollHeight>=0){$('body').addClass('keep-intro show-nav-logo');$thisitem.off('scroll.startitem');}});});}},200);}function fade(){var animation_height=$(window).innerHeight()*0.25;var ratio=Math.round(1/animation_height*10000)/10000;$('.th-block').each(function(){var objectTop=$(this).offset().top;var windowBottom=$(window).scrollTop()+$(window).innerHeight()*0.8;if(objectTop<windowBottom){if(objectTop<windowBottom-animation_height){$(this).css({transition:'opacity 0.1s linear',opacity:1});}else{$(this).css({transition:'opacity 0.25s linear',opacity:(windowBottom-objectTop)*ratio});}}else{$(this).css('opacity',0.1);}});if($(window).scrollTop()+$(window).height()==$(document).height()){$('.th-block').css({transition:'opacity 0.1s linear',opacity:1});}}function destroyheadroom(){$(\"#header-nav-area\").headroom(\"destroy\");return;}function freezeheadroom(){$(\"#header-nav-area\").headroom(\"freeze\");return;}function unfreezeheadroom(){$(\"#header-nav-area\").headroom(\"unfreeze\");return;}function forceheadroompin(){if($(\"#header-nav-area\").hasClass(\"unpinned\")){$(\"#header-nav-area\").removeClass(\"unpinned\");$(\"#header-nav-area\").addClass(\"pinned\");}return;}function removeCommentBubble(){if($('#wpd-bubble-wrapper').length){$('#wpd-bubble-wrapper').remove();}}function hoverDiv($thisitem){console.log(\"hoverDiv($thisitem)\");$thisitem=$thisitem;var checkhoverDiv=function checkhoverDiv($thisitem){var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;console.log(\"hoverDiv($thisitem)\");}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;var hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});},10);};window.addEventListener('resize',function(){var $thisitem=$('.dev-layout-grid-toggle');checkhoverDiv=null;var checkhoverDiv=function checkhoverDiv($thisitem){var hovermouseX=$thisitem.width()/2,hovermouseY=$thisitem.height()/2,hoverlimitX=$thisitem.width(),hoverlimitY=$thisitem.height();$thisitem.on({mousemove:function mousemove(e){var hoveroffset=$thisitem.offset();hovermouseX=Math.min(e.pageX-hoveroffset.left,hoverlimitX);hovermouseY=Math.min(e.pageY-hoveroffset.top,hoverlimitY);if(hovermouseX<0)hovermouseX=0;if(hovermouseY<0)hovermouseY=0;console.log(\"hoverDiv($thisitem)\");}});var hoverfollower=$thisitem.find('.inner-follow'),hoverxp=0,hoveryp=0;var hoverloop=setInterval(function(){hoverxp+=(hovermouseX-hoverxp)/1;hoveryp+=(hovermouseY-hoveryp)/1;hoverfollower.css({left:hoverxp,top:hoveryp});},10);};checkhoverDiv($thisitem);});checkhoverDiv($thisitem);}\n\nfunction images($block){console.log(\"images loaded applied here\");var $thisimageblock=$block.find(\"img\");$thisimageblock.css(\"backgroun\",\"red\");$thisimageblock.each(function(){console.log(\"each image? block\");var $thisimage=$(this);$thisimage.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisimage.attr('src'),newSrc=$thisimage.attr('data-src');$thisimage.attr('src',newSrc);$thisimage.addClass(\"loaded\");});});}function introbanner($block){console.log(\"images loaded applied here\");var $thisbannerblock=$block.find(\"img\");$thisbannerblock.each(function(){console.log(\"each 'intro banner block image '\");var $thisbannerimg=$(this);$thisbannerimg.imagesLoaded({},function(){console.log(\"images have loaded\");var oldSrc=$thisbannerimg.attr('src'),newSrc=$thisbannerimg.attr('data-src');$thisbannerimg.attr('src',newSrc);$thisbannerimg.addClass(\"loaded\");});});}function slideshow($block){$.getScript(\"https://npmcdn.com/flickity@2/dist/flickity.pkgd.js\",function(data,textStatus,jqxhr){console.log(\" hello function slideshow($block)\");var $thisgallery=$block.find(\".slideshow-carousel\");images($thisgallery);$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,freeScroll:false,wrapAround:true,arrowShape:{x0:20,x1:50,y1:50,x2:60,y2:50,x3:30}});});}function map($block){console.log(\"function map($block) - ONE\");if($('#g-map').length>0){var initialize=function initialize(){var mapOptions={center:{lat:51.5198038,lng:-0.1228228999999601},zoom:15,panControl:false,zoomControl:false,draggable:true,scrollwheel:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,overviewMapControl:true,styles:[{\"stylers\":[{\"saturation\":\"-90\"}]}]};map=new google.maps.Map(document.getElementById('g-map'),mapOptions);var image=\"\"+themeurl+'/assets/svg/map_marker_svg_40px.svg?i='+index++;var imageMarker=new google.maps.Marker({position:{lat:51.5198038,lng:-0.1228228999999601},map:map,optimized:false,icon:image});};var index=0;window.gMapsCallback=function(){gMapsLoaded=true;$(window).trigger('gMapsLoaded');};window.loadGoogleMaps=function(){if(gMapsLoaded)return window.gMapsCallback();var script_tag=document.createElement('script');script_tag.setAttribute(\"type\",\"text/javascript\");script_tag.setAttribute(\"src\",\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUXYryE2krCQ7nIvVcXcFzWEPY0cEcXbE&callback=gMapsCallback\");(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(script_tag);};$(window).bind('gMapsLoaded',initialize);window.loadGoogleMaps();}}\n\nfunction blocks(){if($('.intro-banner-block').length>0){$('.intro-banner-block').each(function(){console.log(\"each .intro-banner-block\");var $thisblock=$(this);introbanner($thisblock);});}if($('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').length>0){$('.image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block').each(function(){console.log(\"each .image-one-col-block, .text-two-col-image-block-left-header, .image-multi-col-block, .text-image-two-col-block, .client-logos-block\");var $thisblock=$(this);images($thisblock);});}if($('.slideshow-block').length>0){$('.slideshow-block').each(function(){console.log(\"if slideshow-block\");var $thisblock=$(this);slideshow($thisblock);});}if($('.contact-block').length>0){console.log(\"if contact block\");$('.contact-block').each(function(){var $thisblock=$(this);map($thisblock);});}$(window).scroll(function(){fade();});}\n\nfunction _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nfunction _AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof _AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen.return !== \"function\") {\n    this.return = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  _AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\n_AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\n_AsyncGenerator.prototype.throw = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\n_AsyncGenerator.prototype.return = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nfunction init$1(){var mediaImage,$imagethumb=$('.acf-image-edit'),newitemid,submissionname,$startbutton=$('.dev-layout-grid-toggle');Packery.prototype.getShiftPositions=function(attrName){attrName=attrName||'data-item-id';var _this=this;return this.items.map(function(item){return{attr:item.element.getAttribute(attrName),x:item.rect.x/_this.packer.width};});};Packery.prototype.initShiftLayout=function(positions,attr){if(!positions){this.layout();return;}if(typeof positions=='string'){try{positions=JSON.parse(positions);}catch(error){this.layout();return;}}attr=attr||'data-item-id';this._resetLayout();this.items=positions.map(function(itemPosition){var selector='['+attr+'=\"'+itemPosition.attr+'\"]';var itemElem=this.element.querySelector(selector);var item=this.getItem(itemElem);item.rect.x=itemPosition.x*this.packer.width;return item;},this);this.shiftLayout();};$('form#grid').submit(function(e){e.preventDefault();var _this=$(this),url=_this.attr('action'),method=_this.attr('method'),data=_this.serializeArray(),modal=$('#modalResponse');if($('#ag_wysiwyg_editor').length&&typeof tinyMCE!=='undefined'){data.push({name:'fields[ag_wysiwyg_editor]',value:tinyMCE.get('ag_wysiwyg_editor').getContent()});}$.ajax({url:url,method:method,beforeSend:function beforeSend(xhr){xhr.setRequestHeader('X-WP-Nonce',WP_settings.nonce);},data:data,dataType:'json'}).always(function(data){modal.modal('show');$('.response-message-wrap').addClass('response-message-active');setTimeout(function(){$('.response-message-wrap').removeClass('response-message-active');},1000);});return false;});var verifyItemsRepeater=function verifyItemsRepeater($closestrepeater){var $thisrepeater=$closestrepeater,removeRow=$('.repeater .remove-row');if($('.repeater > .repeater-item').length==1){removeRow.hide();}else{removeRow.show();}};function debounce(fn,threshold){var timeout;return function debounced(){if(timeout){clearTimeout(timeout);}function delayed(){fn();timeout=null;}setTimeout(delayed,threshold||100);};}function makedraggable($newitem,$thisgrid){$thisgrid.find($newitem).each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$thisgrid.packery('bindDraggabillyEvents',draggie);});}function onSubmission(){detectAttrChange();}function captureCanvas(){console.log(\"function captureCanvas()\");$('body').addClass(\"capturing-image\");setTimeout(function(){if($('#canvas-wrap').has('canvas').length){console.log(\"delete exisint canvas\");$('#canvas-wrap').find('canvas').remove();}if($('#export-image-wrap img').length){console.log(\"delete existing image\");$('#export-image-wrap').find('img').remove();}var thescale=1/window.innerWidth*1000;html2canvas(document.querySelector(\".grid-layer\"),{scale:thescale,scrollY:window.pageYOffset*-1}).then(function(canvas){var img=document.createElement(\"img\");img.src=canvas.toDataURL();getCanvas=canvas;document.querySelector(\"#export-image-wrap\").appendChild(img);$('body').find(\"input[name='image-data_hidden_field']\").val(img.src);$('body').addClass(\"submission-previewed\");$('.export-options').removeClass(\"grid-md-9\").addClass(\"grid-md-6\");$('body').removeClass(\"capturing-image\");$('body').removeClass(\"update-available\");});},1);}function initiatepackery($thisgrid){var $grid=$thisgrid.imagesLoaded(function(){$('body').addClass(\"images-loaded\");var isPackeryInit=false;var isEditModeActive;var isGridItemsActive=false;function checkPackery(){console.log(\"checkPackery()\");var breakpointName=getComputedStyle(document.body,':after').content,checkbreakpointName=breakpointName.replace(/\"([^\"]+(?=\"))\"/g,'$1'),widescreenbreakpointName=\"widescreen\",defaultbreakpointName=\"default\";console.log(\"breakpointName: \"+breakpointName+\"\");console.log(\"checkbreakpointName: \"+checkbreakpointName+\"\");console.log(\"widescreenbreakpointName: \"+widescreenbreakpointName+\"\");console.log(\"isPackeryInit: \"+isPackeryInit+\"\");if(checkbreakpointName===widescreenbreakpointName&&!isPackeryInit){console.log(\"init packery if widescreen & not already init\");$grid.packery({itemSelector:'.layout-grid-item',columnWidth:'.grid-sizer',percentPosition:true,isHorizontal:true,initLayout:false});var $coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value');if(isGridItemsActive==false){isGridItemsActive=true;var $griditems=$grid.find('.layout-grid-item'),$coordinates=$grid.closest('.grid-layer').find('.coordinates'),initPositions=$coordinates.attr('value'),$addrow=$grid.closest('.grid-layer').find('.repeater-wrap .add-row');$griditems.each(function(i){console.log(\"each grid item - iniitally\");var $thisitem=$(this),$originalimage=$thisitem.find('img:not(.place-holder)'),thisimageurl=$originalimage.attr(\"src\"),$thisplaceholder=$thisitem.find('img.place-holder'),itemid=$thisitem.attr('data-item-id'),$thisUi=$thisitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label'),$thisUiId=$thisUi.attr('id'),thisimagewidth,thisimageheight;if($originalimage.length>0){gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisplaceholder.attr(\"src\",base64_data);});}else{gridImageOrientation($thisitem,thisimagewidth,thisimageheight);itemEdit($thisitem,$grid);imageRemove(itemid);}console.log(\"$thisUi\"+$thisUi+\"\");$('#'+$thisUiId+'').css(\"background\",\"red\");$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){console.log(\"change\"+ui+\"\");var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){console.log(\"close this grid-item-options-toggle\");$thisitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");});$addrow.click(function(){console.log(\"hello add a row\");var $this=$(this),$coordinates=$this.closest('.grid-layer').find('.coordinates'),$repeateritems=$this.closest('.grid-layer').find('.repeater-item'),$closestrepeater=$this.closest('.grid-layer').find('.repeater'),$lastitem=$closestrepeater.find('.repeater-item:last'),clone=$lastitem.clone(),ids=$repeateritems.map(function(){return $(this).attr('data-item-id');}),maxValueInArray=Math.max.apply(Math,ids),itemid=maxValueInArray+1;$(clone).insertAfter($lastitem);var $newlastitem=$closestrepeater.find('.repeater-item:last'),newIndex=$('.repeater > .repeater-item').length-1,$thisUi=$newlastitem.find('.image-ui'),$thisUiAppend=$thisUi.parent('label');$newlastitem.find('.ui-selectmenu-button, .ui-front').remove();$newlastitem.attr('data-item-id',itemid);$closestrepeater.find('.repeater-item:last[name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$closestrepeater.find('.repeater-item:last [name]').attr('name',function(index,name){return name.replace(/\\[\\d+\\]/,'['+newIndex+']');});$newlastitem.find('.acf-image-edit').attr('id','acf-image-edit-'+itemid+'');$newlastitem.find('.acf-image-remove').attr('id','acf-image-remove-'+itemid+'');$newlastitem.attr('data-item-id-id',''+itemid+'');$newlastitem.find('.input-id').attr('value',''+itemid+'');$newlastitem.find('.image-ui').attr('id','acf-post-object-'+itemid+'');var $thisUiId=$thisUi.attr('id'),$originalimage=$newlastitem.find('img:not(.place-holder)');$('#'+$thisUiId+'').iconselectmenu({appendTo:$thisUiAppend,width:'auto',style:'dropdown',change:function change(event,ui){var thisimage=$(ui.item.element).attr(\"data-segment-image\");var imagetype=$(ui.item.element).attr(\"data-segment-type\");$originalimage.attr(\"src\",thisimage);$originalimage.attr(\"data-segment-type\",imagetype);updateImageObject($thisitem,imagetype);canvasChange();},select:function select(event,ui){$newlastitem.find('.grid-item-options-toggle').click();}}).iconselectmenu(\"menuWidget\").addClass(\"ui-menu-icons avatar\");makedraggable($(clone),$grid);imageEdit(itemid);imageRemove(itemid);itemEdit($(clone),$grid);$grid.packery('appended',$(clone));var positions=$thisgrid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);verifyItemsRepeater($closestrepeater);localStorage.setItem(\"coordinates\",jsonpositions);var $cleangrid=$(\"#tester-grid-id\");cleanGridContent($cleangrid);$(clone).addClass(\"item-added\");$('html, body').animate({scrollTop:$(clone).offset().top},200);setTimeout(function(){$(clone).removeClass(\"item-added\");},600);return false;});$(document).on('click','.repeater .remove-row',function(){var item=$('.repeater > .repeater-item');if(item.length==1){item.find('input').val('');}else{var $closest=$(this).closest('.repeater-item'),$closestrepeater=$(this).closest('.repeater'),$coordinates=$grid.closest('.grid-layer').find('.coordinates');$grid.packery('remove',$closest).packery('shiftLayout');var positions=$grid.packery('getShiftPositions','data-item-id'),jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);var $cleangrid=$(\"#tester-grid-id\");cleanGridContent($cleangrid);verifyItemsRepeater($closestrepeater);}return false;});}if($('body').hasClass('logged-in')){$grid.packery('initShiftLayout',initPositions,'data-item-id');}else{var storedcoordinates=localStorage.getItem('coordinates');if(storedcoordinates==null){var storedcoordinates=initPositions;}$grid.packery('initShiftLayout',storedcoordinates,'data-item-id');}if($('body').hasClass('logged-in')){$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"$grid.on( 'dragItemPositioned - logged in'\");var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}else{console.log(\"not logged in\");$grid.find('.layout-grid-item').each(function(i,itemElem){var draggie=new Draggabilly(itemElem);$grid.packery('bindDraggabillyEvents',draggie);});$grid.on('dragItemPositioned',function(){console.log(\"dragItemPositioned - not logged in\");$grid.packery('layout').trigger('layoutComplete');var positions=$grid.packery('getShiftPositions','data-item-id');var jsonpositions=JSON.stringify(positions);$coordinates.val(jsonpositions);$coordinates.attr('value',jsonpositions);localStorage.setItem(\"coordinates\",jsonpositions);canvasChange();if($('.item-edit-active').length){$('.item-edit-active').find('.grid-item-options-toggle').click();}});}if($('body').hasClass(\"is-touch\")){console.log(\" TO DO ensure to have touch screen message enabled\");}isPackeryInit=true;console.log(isEditModeActive+\"isEditModeActive\");if(isEditModeActive===true){console.log(isEditModeActive);$('body').addClass('dev-layout-grid-on');}setTimeout(function(){$grid.packery('layout').trigger('layoutComplete');},100);}else if(breakpointName===defaultbreakpointName&&isPackeryInit){console.log(\"disable packery if default and already intialized\");$grid.packery('destroy');isPackeryInit=false;console.log(\"Hello breakpoint - mobile?\");if($('body').hasClass(\"dev-layout-grid-on\")){isEditModeActive=true;$('body').removeClass('dev-layout-grid-on');}else{isEditModeActive=false;}}else{console.log(\"else - but doesnt do anything\");}}checkPackery();$(window).on('resize',debounce(checkPackery,200));});}$('input[name=\"submission_name\"]').on('change',function(){submissionname=$('input[name=\"submission_name\"]').val();var posttitle=submissionname;$('input[name=\"post_title\"]').val(\"\"+posttitle+\"\");console.log(\"submissionname =\"+submissionname+\"\");console.log(\"posttitle =\"+posttitle+\"\");});$(\"#load-image\").on('click',function(){console.log(\"load-image click\");captureCanvas();});$(\"#download-image\").on('click',function(){var imgageData=getCanvas.toDataURL(\"image/png\");console.log(\"submissionname on download =\"+submissionname+\"\");var newData=imgageData.replace(/^data:image\\/png/,\"data:application/octet-stream\");$(\"#download-image\").attr(\"download\",\"\"+submissionname+\"'s Freeling Street.png\").attr(\"href\",newData);});$(\".dev-layout-grid-toggle\").click(function(){if($('body').hasClass(\"dev-layout-grid-on\")){$('body').removeClass('dev-layout-grid-on');$(\"#size-wrap\").removeClass('grid-container');}else{$('body').addClass('dev-layout-grid-on');$(\"#size-wrap\").addClass('grid-container');console.log(\"scrolling to the top of grid\");$('html, body').animate({scrollTop:$('.grid-layer').offset().top-0},'slow');}});function initgriditems(){localStorageSize();$('.grid').each(function(){$thisgrid=$(this);if($(\"body\").hasClass(\"logged-in\")){verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);}else{if(localStorage.getItem(\"gridContent\")===null){console.log(\"if not local storage\");verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);var gridContent=document.getElementById(\"tester-grid-id\").innerHTML;}else{console.log(\"if local storage\");console.log(\"compressed local storage gridContent\"+localStorage.getItem('gridContent')+\"\");var gridContent=LZString.decompress(localStorage.getItem('gridContent'));console.log(\"decompressed local storage gridContent\"+gridContent+\"\");$(\"#tester-grid-id\").empty();$(\"#tester-grid-id\").append(gridContent);verifyItemsRepeater($thisgrid);initiatepackery($thisgrid);$(\"#clear-local-storage\").click(function(){console.log(\"clearing local storage\");localStorage.removeItem('gridContent');localStorage.removeItem('coordinates');location.reload();});}}});}initgriditems();hoverDiv($startbutton);onSubmission();}function canvasChange(){console.log(\"canvasChange()\");if($(\"body\").hasClass(\"submission-previewed\")){$(\"body\").addClass(\"update-available\");$(\"a#load-image\").text(\"Update Preview Image\");}}function itemEdit($thisitem,$grid){var $this=$thisitem,$thisedittoggle=$thisitem.find('.grid-item-options-toggle').not(\".grid-item-options-toggle-rotate\"),$thisrotatetoggle=$thisitem.find('.grid-item-options-toggle-rotate'),thisitemidvalue=$this.find('input.input-id').val(),thisitemwidthvalue=$this.find('input.input-width').val(),thisitemheightvalue=$this.find('input.input-height').val(),thisitemzindexvalue=$this.find('input.input-z-index').val(),applyrotate=$this.find('input.input-rotate').val()+\"deg\",applyxvalue=$this.find('input.input-image-position-x').val()+\"%\",applyyvalue=$this.find('input.input-image-position-y').val()+\"%\",applyscalevalue=$this.find('input.input-image-scale').val()/100,$inputfields=$this.find('input');$postfield=$this.find('.post-object select');$thisedittoggle.click(function(){console.log(\"click; activate edit item\");if($this.hasClass(\"item-edit-active\")){$this.removeClass(\"item-edit-active\");$('body').removeClass(\"edit-active\");}else{$('.layout-grid-item.repeater-item').removeClass(\"item-edit-active\");$this.addClass(\"item-edit-active\");$('body').addClass(\"edit-active\");$this.find('.ui-button').click();}});$thisrotatetoggle.click(function(){console.log(\"click; rotate clicking\");var $thisrotate=$this.find('input.input-rotate'),thisrotatevalue=Number($thisrotate.val());if(thisrotatevalue==270){var thisnewrotatevalue=0;}else{var thisnewrotatevalue=Number(thisrotatevalue+90);}$thisrotate.val(thisnewrotatevalue);console.log(\"thisnewrotatevalue\"+thisnewrotatevalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('.grid-item-options-toggle-rotate .rotate').css(\"transform\",\"rotate(\"+thisnewrotatevalue+\"deg)\");$this.find('input.input-rotate').val(thisnewrotatevalue);canvasChange();var $cleangrid=$(\"#tester-grid-id\");cleanGridContent($cleangrid);});$inputfields.on('input',function(){console.log(\"$inputfields changed\");var $thisfield=$(this),newvalue=$thisfield.val(),thisfieldtype=$thisfield.attr('data-input-type');if(thisfieldtype==\"image_rotate\"){console.log(\"rotate input on pinput change\");applyrotatevalue=newvalue+\"deg\";$thisfield.attr(\"value\",newvalue);console.log(\"newvalue\"+newvalue+\"\");$this.find(\".inner-grid-item\").css(\"transform\",\"rotate(\"+applyrotatevalue+\")\");}else if(thisfieldtype==\"input-id\"){}else if(thisfieldtype==\"input-width\"){var thisclass=\"grid-item-width\",newclass=\"grid-item-width-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-height\"){var thisclass=\"grid-item-height\",newclass=\"grid-item-height-\"+newvalue/25+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);$grid.packery('layout');var thisimagewidth,thisimageheight;gridImageOrientation($thisitem,thisimagewidth,thisimageheight);}else if(thisfieldtype==\"input-z-index\"){var thisclass=\"item-z-index\",newclass=\"item-z-index-\"+newvalue+\"\",classes=$this.attr('class').split(\" \").filter(function(c){return c.lastIndexOf(thisclass,0)!==0;});$this.attr('class',classes.join(\" \").trim());$this.addClass(newclass);}else if(thisfieldtype==\"input-image-position-x\"){applyxvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-position-y\"){applyyvalue=newvalue+\"%\";$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item\").css(\"transform\",\"translateX(\"+applyxvalue+\") translateY(\"+applyyvalue+\")\");}else if(thisfieldtype==\"input-image-scale\"){applyscalevalue=newvalue/100;$thisfield.attr(\"value\",newvalue);$this.find(\".inner-grid-item .image-wrap img\").css(\"transform\",\"scale(\"+applyscalevalue+\")\");}});}function imageEdit(itemid){console.log(\"imageedit function itemid\"+itemid+\"\");var $thisimagethumb=$(\"#acf-image-edit-\".concat(itemid));console.log(\"$thisimagethumb\"+$thisimagethumb+\"\");$thisimagethumb.click(function(){var $this=$(this),thisimagethumbid=$this.attr(\"id\"),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\")),$thisimage=$thisitem.find(\".acf-image\"),mediaImage;if(!$.isFunction(wp.media)){console.log(\"! $.isFunction( wp.media )\");return;}if(mediaImage){console.log(\"mediaImage\");mediaImage.open();return;}mediaImage=wp.media({library:{type:'image'},multiple:false});mediaImage.on('select',function(){console.log(\"mediaImage.on( 'select', function()\");var image=mediaImage.state().get('selection').first().toJSON();$('.media-modal-close').trigger('click');var $thisitem=$thisimage.closest(\".layout-grid-item\"),thisimagewidth=image.width,thisimageheight=image.height,thisimageurl=image.url;$thisimage.val(image.id);$thisitem.find('img').remove();$thisitem.find('.image-wrap').append($('<img src=\"'+image.url+'\"\">'));$thisitem.find('.image-wrap').append($('<img class=\"place-holder\" src=\"'+image.url+'\"\">'));gridImageOrientation($thisitem,thisimagewidth,thisimageheight);convertImgToDataURLviaCanvas(thisimageurl,function(base64_data){$thisitem.find('img.place-holder').attr(\"src\",base64_data);});$('html, body').animate({scrollTop:$thisitem.offset().top},200);});mediaImage.open();return false;});}function imageRemove(itemid){var $thisimagedelete=$(\"#acf-image-remove-\".concat(itemid));$thisimagedelete.click(function(){var $this=$(this),thisitemid=$this.closest(\".layout-grid-item\").attr(\"data-item-id\"),$thisitem=$(\".layout-grid-item[data-item-id=\".concat(thisitemid,\"]\"));$thisitem.find('img').remove();$thisitem.find('input.acf-image').val(\"\");return false;});}function convertImgToDataURLviaCanvas(url,callback){var img=new Image();img.crossOrigin='Anonymous';img.onload=function(){var canvas=document.createElement('CANVAS');var ctx=canvas.getContext('2d');var dataURL;canvas.height=this.height;canvas.width=this.width;ctx.fillStyle=\"#000\";ctx.fillRect(0,0,canvas.width,canvas.height);dataURL=canvas.toDataURL();callback(dataURL);canvas=null;};img.src=url;}function updateImageObject($thisitem,imagetype){var zIndexClass=$thisitem.attr('class').split(' ');for(var i=0;i<zIndexClass.length;i++){if(zIndexClass[i].indexOf('item-z-index')!=-1){$thisitem.removeClass(zIndexClass[i]);}}if(imagetype=='tree'){$thisitem.attr(\"data-item-z-index\",\"2\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"2\");$thisitem.addClass(\"item-z-index-2\");}else if(imagetype=='normal'){$thisitem.attr(\"data-item-z-index\",\"1\");$thisitem.find(\"[data-input-type='input-z-index']\").val(\"1\");$thisitem.addClass(\"item-z-index-1\");}}function localStorageSize(){var _lsTotal=0,_xLen,_x;for(_x in localStorage){if(!localStorage.hasOwnProperty(_x)){continue;}_xLen=(localStorage[_x].length+_x.length)*2;_lsTotal+=_xLen;console.log(_x.substr(0,50)+\" = \"+(_xLen/1024).toFixed(2)+\" KB\");}console.log(\"Total = \"+(_lsTotal/1024).toFixed(2)+\" KB\");}function cleanGridContent($cleangrid){console.log(\"cleanGridContent($cleangrid)\");var $cleangridcontent=$cleangrid.clone();$cleangridcontent.find('.ui-selectmenu-button').remove();$cleangridcontent.find('.ui-selectmenu-menu.ui-front').remove();var gridContent=$cleangridcontent.prop('outerHTML');localStorage.setItem(\"gridContent\",LZString.compress(gridContent));localStorageSize();}function gridImageOrientation($thisitem,thisimagewidth,thisimageheight){var $this=$thisitem,thiswidth=$this.width(),thisheight=$this.height(),thiswidthtoheightratio=thiswidth/thisheight,$thisimage=$this.find('img'),thisimagewidth=thisimagewidth;if(thisimagewidth==undefined){var thisimagewidth=$thisimage.width(),thisimageheight=$thisimage.height();}else{var thisimagewidth=thisimagewidth,thisimageheight=thisimageheight;}var thisimagewidthtoheightratio=thisimagewidth/thisimageheight;$this.attr(\"item-ratio\",\"\");$thisimage.attr(\"itemimage-ratio\",\"\");$this.attr(\"item-ratio\",thiswidthtoheightratio);$thisimage.attr(\"itemimage-ratio\",thisimagewidthtoheightratio);$this.removeClass(\"square-item image-larger-than-item vertical-item horizontal-item ratio-equal image-larger-than-item\");$thisimage.removeClass(\"square-image vertical-image horizontal-image\");if(thiswidth==thisheight){$this.addClass(\"square-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}else if(thiswidth<thisheight){$this.addClass(\"vertical-item\");}else if(thiswidth>thisheight){$this.addClass(\"horizontal-item\");if(thiswidthtoheightratio==thisimagewidthtoheightratio){}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){$this.addClass(\"image-larger-than-item\");}else if(thiswidthtoheightratio>thisimagewidthtoheightratio){}}if(thisimagewidth==thisimageheight){$thisimage.addClass(\"square-image\");}else if(thisimagewidth<thisimageheight){$thisimage.addClass(\"vertical-image\");}else if(thisimagewidth>thisimageheight){$thisimage.addClass(\"horizontal-image\");}}\n\nfunction init$2(){console.log(\"overview js functions\");if($(\".project-overview\").length>0){$('ul.sections li a').mouseenter(function(){var $this=$(this).parent(\"li\"),thissection=$this.attr(\"data-section-title\"),$nextline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').next(\".line\"),$previousline=$('ul.sections li[data-section-title=\"'+thissection+'\"]').prev(\".line\");console.log(\"'ul.sections li  hover\");console.log(\"thissections = \"+thissection+\"\");if($this.hasClass('section-is-active')){}else{$('ul.sections li').removeClass('section-is-active');$this.addClass('section-is-active');$previousline.addClass('section-is-active');$nextline.addClass('section-is-active');$('ul.sections li[data-section-title=\"'+thissection+'\"]').addClass('section-is-active');return;}return;});}}\n\nfunction init(){var touch=false;barba.init({views:[{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();domReady(blocks);domReady(init$2);}},{namespace:'archive',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = archive\");imageopacity();opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");imageopacity();opacity();domReady(blocks);}},{namespace:'layout-grid',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = layout grid\");opacity();domReady(init$1);domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");imageopacity();opacity();domReady(blocks);}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");introanimationdone=true;if($('body').hasClass('is-not-touch')){touch=false;}else{touch=true;}if($('body').hasClass('dev-grid-on')){devon=true;}else{devon=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);if(data.next.url.path){var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}if(devon==true){$('body').addClass('dev-grid-on');}else{$('body').removeClass('dev-grid-on');}if(touch==true){console.log(\"apply touch\");$('body').addClass('is-touch');$(\"body\").removeClass('is-not-touch');}else{$(\"body\").addClass('is-not-touch');$(\"body\").removeClass('is-touch');}if(introanimationdone==true){console.log(\"introanimation not needed anymore\");$(\"body\").addClass('animation-done');$(\"body\").addClass('animation-hide');$(\"body\").removeClass('animation-fix');}else{console.log(\"introanimationdone == false\");}removeCommentBubble();menuPositioner();orientation();});}\n\nfunction siteLoad(){console.log(\"siteLoad\");if(introanimationdone==false){console.log(\"(introanimationdone == false)\");$('.fade-item').css('opacity',0);fade();topAnimation();$('body').removeClass('site-loading');$('body').addClass('animation-done');introanimationdone=true;}else{console.log(\"(introanimationdone == true)\");$('.fade-item').css('opacity',0);fade();$('body').removeClass('site-loading');}}\n\nfunction init$3(){function initheadroom(){console.log(\"inithreadroom - shoul be once, intuyll we destroy it\");if($(\"#header-nav-area\").length){console.log(\"#header-nav-area exists\");$(\"#header-nav-area\").headroom({\"offset\":0,\"tolerance\":5,\"classes\":{\"initial\":\"animated\",\"pinned\":\"pinned\",\"unpinned\":\"unpinned\",\"frozen\":\"frozen\"},onPin:function onPin(){console.log(\"headroom onPin function\");var headRoomStatus=\"onPin\";SetSubmenuHeight(headRoomStatus);},onUnpin:function onUnpin(){var headRoomStatus=\"onUnpin\";console.log(\"headroom onUnPin function\");SetSubmenuHeight(headRoomStatus);}});}else{}return;}function detectopofmainfixer(){console.log(\"detectopofmainfixer()\");$(window).scroll(function(){var windowScrolltop=$(this).scrollTop();$intro=$('#intro-area'),introheight=$intro.height(),reached=windowScrolltop-introheight;if(reached>=0){if($('body').hasClass('main-reached')){if($('body').hasClass('nav-on')){}else{unfreezeheadroom();return;}}else{$('body').addClass('main-reached');setTimeout(function(){$('body, html').scrollTop(0);},10);return;}}else if(reached<0){if($('body').hasClass('nav-on')){}else{freezeheadroom();return;}}return;});}function navtogglingfunction(){console.log(\"click\");if(!$('body').not('nav-off')||!$('body').not('nav-on')){destroyheadroom();$('body').addClass('nav-on');console.log(\"not either\");return;}else if($('body').hasClass('nav-on')){console.log(\"turn nav off\");initheadroom();$('body').addClass('nav-off');$('body').removeClass('nav-on');return;}else{console.log(\"turn nav on\");destroyheadroom();$('body').addClass('nav-on');$('body').removeClass('nav-off');var $mainmenuitmes=$('li.menu-item a');$mainmenuitmes.click(function(){console.log(\"$mainmenuitmes.click(function()\");$('body').addClass('nav-off');$('body').removeClass('nav-on');initheadroom();return;});return;}return;}if($('#toggle-item').length>0){console.log(\"if #toggle-item\");if($(\"#header-nav-area\").length>0){$('#header-nav-area').mouseenter(function(){console.log(\"#header-nav-area hover\");if($('body').hasClass('nav-on')){}else{console.log(\"nav not on mouseenter\");forceheadroompin();return;}return;});}var $this=$('#toggle-item');$this.click(function(){navtogglingfunction();return;});initheadroom();detectopofmainfixer();return;}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();init$3();menuPositioner();siteLoad();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}