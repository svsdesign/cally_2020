/*
Theme Name: cally2020
Theme URI:   
Author: Simon van Stipriaan 
Author URI: http://svs.design
*/



 @font-face {
  font-family: "AkkuratStd-Light";
  src: url("../fonts/AkkuratStd-Light.eot"); /* IE9 Compat Modes */
  src: url("../fonts/AkkuratStd-Light.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */
    url("../fonts/AkkuratStd-Light.otf") format("opentype"), /* Open Type Font */
    url("../fonts/AkkuratStd-Light.svg") format("svg"), /* Legacy iOS */
    url("../fonts/AkkuratStd-Light.ttf") format("truetype"), /* Safari, Android, iOS */
    url("../fonts/AkkuratStd-Light.woff") format("woff"), /* Modern Browsers */
    url("../fonts/AkkuratStd-Light.woff2") format("woff2"); /* Modern Browsers */
  font-weight: normal;
  font-style: normal;
}

 @font-face {
  font-family: "AkkuratStd";
  src: url("../fonts/AkkuratStd.eot"); /* IE9 Compat Modes */
  src: url("../fonts/AkkuratStd.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */
    url("../fonts/AkkuratStd.otf") format("opentype"), /* Open Type Font */
    url("../fonts/AkkuratStd.svg") format("svg"), /* Legacy iOS */
    url("../fonts/AkkuratStd.ttf") format("truetype"), /* Safari, Android, iOS */
    url("../fonts/AkkuratStd.woff") format("woff"), /* Modern Browsers */
    url("../fonts/AkkuratStd.woff2") format("woff2"); /* Modern Browsers */
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "AkkuratStd-Italic";
  src: url("../fonts/AkkuratStd-Italic.eot"); /* IE9 Compat Modes */
  src: url("../fonts/AkkuratStd-Italic.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */
    // url("../fonts/AkkuratStd.otf") format("opentype"), /* Open Type Font */
    url("../fonts/AkkuratStd-Italic.svg") format("svg"), /* Legacy iOS */
    url("../fonts/AkkuratStd-Italic.ttf") format("truetype"), /* Safari, Android, iOS */
    url("../fonts/AkkuratStd-Italic.woff") format("woff"), /* Modern Browsers */
    url("../fonts/AkkuratStd-Italic.woff2") format("woff2"); /* Modern Browsers */
  font-weight: normal;
  font-style: normal;
}
 
 
 @font-face {
  font-family: "AkkuratStd-Bold";
  src: url("../fonts/AkkuratStd-Bold.eot"); /* IE9 Compat Modes */
  src: url("../fonts/AkkuratStd-Bold.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */
    url("../fonts/AkkuratStd-Bold.otf") format("opentype"), /* Open Type Font */
    url("../fonts/AkkuratStd-Bold.svg") format("svg"), /* Legacy iOS */
    url("../fonts/AkkuratStd-Bold.ttf") format("truetype"), /* Safari, Android, iOS */
    url("../fonts/AkkuratStd-Bold.woff") format("woff"), /* Modern Browsers */
    url("../fonts/AkkuratStd-Bold.woff2") format("woff2"); /* Modern Browsers */
  font-weight: bold;
  font-style: normal;
}

@each $scheme in $schemes { // start colour scheme
 
  body.#{nth($scheme, 1)}:not(.wp-admin), // ensure we're not applying to admin 
  body.#{nth($scheme, 1)}.wp-admin .th-block, // admin block styling - but need the colour scheme in admin aswell?
  body.#{nth($scheme, 1)}.wp-admin .wp-block-freeform // for classic editor
  {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: nth($scheme, 3);
  background-color: nth($scheme, 2);
  font-family: $light-font-family;
  @include fluid-type(font-size, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($fontsize, xs)*1, map-get($fontsize, lg)*1); // fixed sizing 
  @include fluid-type(font-size, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($fontsize, lg)*1, map-get($fontsize, xxl)*1); // viewport sizing 
  @include fluid-type(line-height, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($lineheight, xs)*1, map-get($lineheight, lg)*1); // fixed sizing 
  @include fluid-type(line-height, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($lineheight, lg)*1, map-get($lineheight, xxl)*1); // viewport sizing 
  
    /* START HEADERS */

    h1.intro{
    @include type-large;
    width: 100%;// review?
    @include fluid-type(padding-bottom, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($lineheight, xs), map-get($lineheight, lg)); // px sizing
    @include fluid-type(padding-bottom, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($lineheight, lg), map-get($lineheight, xxl)); // viewport sizing

      @media (min-width: map-get($breakpoints, lg)) {
        width: 50%;// review?

      }

    }

    h2,
    .h2
    {
    @include h2;
    }


    h3,
    .h3{
    @include h3;
    }

    h4,
    .h4{
    @include h4;
    }




    /* END HEADERS */

    /* type formating start */

    b{
    font-family: $medium-font-family;// so bold again
    }

    .caption{
    @include type-small;
    }

    /* START LINKS */

    a,
    a:visited{
    //text-decoration: underline;
    text-decoration: none;

    border-bottom: 1px solid nth($scheme, 3);
    color: nth($scheme, 3);
    }

    a:hover,
    a:active{
    text-decoration: none;
    border-bottom: none;
    }

    /* START SELECT - inverse colors */   

    ::-moz-selection{ 
    color: nth($scheme, 2);
    background: nth($scheme, 3);
    }  

    ::selection{ 
    color: nth($scheme, 2);
    background: nth($scheme, 3);
    }  

    /* REMOVE OUTLINE */

    body:not(.user-is-tabbing) button:focus,
    body:not(.user-is-tabbing) input:focus,
    body:not(.user-is-tabbing) select:focus,
    body:not(.user-is-tabbing) textarea:focus {
      outline: none;
    }

    //Start Buttons:

    .button-link{
    border-bottom:none!important;
    display: block;
    width: 100%;
    border: 1px solid nth($scheme, 3)!important;
    text-align: center;
    // line-height: 0;
    font-family: $light-font-family;
    background-color: $darktransparent;
    color: nth($scheme, 3);
    @include fluid-type(margin-top, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($lineheight, xs)*0.5, map-get($lineheight, lg)*0.5); // fixed sizing 
    @include fluid-type(margin-top, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($lineheight, lg)*0.5, map-get($lineheight, xxl)*0.5); // viewport sizing 

    @include fluid-type(font-size, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($fontsize, xs)*1, map-get($fontsize, lg)*1); // fixed sizing 
    @include fluid-type(font-size, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($fontsize, lg)*1, map-get($fontsize, xxl)*1); // viewport sizing 
    @include fluid-type(line-height, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($lineheight, xs)*2, map-get($lineheight, lg)*2); // fixed sizing 
    @include fluid-type(line-height, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($lineheight, lg)*2, map-get($lineheight, xxl)*2); // viewport sizing 
    @include fluid-type(padding, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($lineheight, xs)*0.5, map-get($lineheight, lg)*0.5); // fixed sizing 
    @include fluid-type(padding, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($lineheight, lg)*0.5, map-get($lineheight, xxl)*0.5); // viewport sizing 
    @include fluid-type(border-radius, map-get($breakpoints, xs), map-get($breakpoints, lg), map-get($lineheight, xs)*0.25, map-get($lineheight, lg)*0.25); // fixed sizing 
    @include fluid-type(border-radius, map-get($breakpoints, lg), map-get($breakpoints, xxl), map-get($lineheight, lg)*0.25, map-get($lineheight, xxl)*0.25); // viewport sizing 

      &:hover{
      // border: 2px solid nth($scheme, 3);
      background-color: nth($scheme, 3);
      color: nth($scheme, 2);
      -webkit-transition: background-color 100ms linear;
      -ms-transition: background-color 100ms linear;
      transition: background-color 100ms linear;
      border-bottom:none!important;
      }
      

    }

  }// body

} //@each $scheme in $schemes // end colour scheme


/*END LINKS */